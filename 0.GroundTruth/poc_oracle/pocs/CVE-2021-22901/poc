#include <stdio.h>
#include <stdlib.h>
#include <curl/curl.h>

static CURLcode ssl_ctx_cb(CURL *curl, void *sslctx, void *parm) {
    (void)curl;
    (void)sslctx;
    (void)parm;
    return CURLE_OK;
}

int main(void) {
    CURL *easy = NULL;
    CURLM *multi = NULL;
    int still_running = 0;
    if (curl_global_init(CURL_GLOBAL_DEFAULT) != CURLE_OK) {
        fprintf(stderr, "curl_global_init() failed\n");
        return EXIT_FAILURE;
    }
    easy  = curl_easy_init();
    multi = curl_multi_init();
    if (!easy || !multi) {
        fprintf(stderr, "curl_easy_init() or curl_multi_init() failed\n");
        return EXIT_FAILURE;
    }
    curl_easy_setopt(easy, CURLOPT_URL, "https://example.com/");
    curl_easy_setopt(easy, CURLOPT_CONNECT_ONLY, 1L);
    curl_easy_setopt(easy, CURLOPT_SSL_CTX_FUNCTION, ssl_ctx_cb);
    curl_multi_add_handle(multi, easy);
    curl_multi_perform(multi, &still_running);
    while (still_running) {
        curl_multi_perform(multi, &still_running);
    }
    curl_multi_remove_handle(multi, easy);
    curl_multi_cleanup(multi);
    curl_easy_cleanup(easy);
    curl_global_cleanup();

    return EXIT_SUCCESS;
}