{
    "0": "-    uint8_t mus_event[] = { 0, 0, 0, 0 };\n\n+#define MUS_SZ 4\n+    uint8_t mus_event[MUS_SZ] = { 0, 0, 0, 0 };\n\n-        setup_ret = _WM_SetupMidiEvent(mus_mdi, (uint8_t *)mus_event, 0);\n\n+        setup_ret = _WM_SetupMidiEvent(mus_mdi, (uint8_t *)mus_event, MUS_SZ, 0);\n\n-#define MUS_SZ 4\n-    uint8_t mus_event[MUS_SZ] = { 0, 0, 0, 0 };\n\n+    uint8_t mus_event[] = { 0, 0, 0, 0 };\n\n-        setup_ret = _WM_SetupMidiEvent(mus_mdi, (uint8_t *)mus_event, MUS_SZ, 0);\n\n+        setup_ret = _WM_SetupMidiEvent(mus_mdi, (uint8_t *)mus_event, 0);\n\n",
    "1": "-uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t running_event) {\n\n+uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint32_t siz, uint8_t running_event) {\n\n",
    "2": "+    if (!siz) {\n+        goto shortbuf;\n+    }\n\n",
    "3": "+        if (--siz == 0) {\n+            goto shortbuf;\n+        }\n\n",
    "4": "+        if (siz < 2) {\n+            goto shortbuf;\n+        }\n\n",
    "5": "+        if (siz < 2) {\n+            goto shortbuf;\n+        }\n\n",
    "6": "+        if (siz < 2) {\n+            goto shortbuf;\n+        }\n\n",
    "7": "+        if (siz < 2) {\n+            goto shortbuf;\n+        }\n\n",
    "8": "+        if (siz < 2) {\n+            goto shortbuf;\n+        }\n\n",
    "9": "+                if (siz < 4) {\n+                    goto shortbuf;\n+                }\n\n",
    "10": "-                if (*event_data > 0x7f) {\n\n+                if (--siz && *event_data > 0x7f) {\n\n-                if (*event_data > 0x7f) {\n\n+                if (--siz && *event_data > 0x7f) {\n\n-                if (*event_data > 0x7f) {\n\n+                if (--siz && *event_data > 0x7f) {\n\n-                if (*event_data > 0x7f) {\n\n+                if (--siz && *event_data > 0x7f) {\n\n-                if (*event_data > 0x7f) {\n\n+                if (--siz && *event_data > 0x7f) {\n\n-                if (*event_data > 0x7f) {\n\n+                if (--siz && *event_data > 0x7f) {\n\n-                if (*event_data > 0x7f) {\n\n+                if (--siz && *event_data > 0x7f) {\n\n-uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint32_t siz, uint8_t running_event) {\n\n+uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t running_event) {\n\n-    if (!siz) {\n-        goto shortbuf;\n-    }\n\n-        if (--siz == 0) {\n-            goto shortbuf;\n-        }\n\n-        if (siz < 2) {\n-            goto shortbuf;\n-        }\n\n-        if (siz < 2) {\n-            goto shortbuf;\n-        }\n\n-        if (siz < 2) {\n-            goto shortbuf;\n-        }\n\n-        if (siz < 2) {\n-            goto shortbuf;\n-        }\n\n-        if (siz < 2) {\n-            goto shortbuf;\n-        }\n\n-                if (siz < 4) {\n-                    goto shortbuf;\n-                }\n\n-                if (--siz && *event_data > 0x7f) {\n\n+                if (*event_data > 0x7f) {\n\n-                        if (!siz) {\n-                            break;\n-                        }\n\n-                        siz--;\n\n-                if (!siz) {\n-                    goto shortbuf;\n-                }\n\n-                if (--siz < tmp_length) {\n-                    goto shortbuf;\n-                }\n-                if (!tmp_length) {\n-                    break;\n-                }\n\n-                if (--siz && *event_data > 0x7f) {\n\n+                if (*event_data > 0x7f) {\n\n-                        if (!siz) {\n-                            break;\n-                        }\n\n-                        siz--;\n\n-                if (!siz) {\n-                    goto shortbuf;\n-                }\n\n-                if (--siz < tmp_length) {\n-                    goto shortbuf;\n-                }\n-                if (!tmp_length) {\n-                    break;\n-                }\n\n-                if (--siz && *event_data > 0x7f) {\n\n+                if (*event_data > 0x7f) {\n\n-                        if (!siz) {\n-                            break;\n-                        }\n\n-                        siz--;\n\n-                if (!siz) {\n-                    goto shortbuf;\n-                }\n\n-                if (--siz < tmp_length) {\n-                    goto shortbuf;\n-                }\n-                if (!tmp_length) {\n-                    break;\n-                }\n\n-                if (--siz && *event_data > 0x7f) {\n\n+                if (*event_data > 0x7f) {\n\n-                        if (!siz) {\n-                            break;\n-                        }\n\n-                        siz--;\n\n-                if (!siz) {\n-                    goto shortbuf;\n-                }\n\n-                if (--siz < tmp_length) {\n-                    goto shortbuf;\n-                }\n-                if (!tmp_length) {\n-                    break;\n-                }\n\n-                if (--siz && *event_data > 0x7f) {\n\n+                if (*event_data > 0x7f) {\n\n-                        if (!siz) {\n-                            break;\n-                        }\n\n-                        siz--;\n\n-                if (!siz) {\n-                    goto shortbuf;\n-                }\n\n-                if (--siz < tmp_length) {\n-                    goto shortbuf;\n-                }\n-                if (!tmp_length) {\n-                    break;\n-                }\n\n-                if (--siz && *event_data > 0x7f) {\n\n+                if (*event_data > 0x7f) {\n\n-                        if (!siz) {\n-                            break;\n-                        }\n\n-                        siz--;\n\n-                if (!siz) {\n-                    goto shortbuf;\n-                }\n\n-                if (--siz < tmp_length) {\n-                    goto shortbuf;\n-                }\n-                if (!tmp_length) {\n-                    break;\n-                }\n\n-                if (--siz && *event_data > 0x7f) {\n\n+                if (*event_data > 0x7f) {\n\n-                        if (!siz) {\n-                            break;\n-                        }\n\n-                        siz--;\n\n-                if (!siz) {\n-                    goto shortbuf;\n-                }\n\n-                if (--siz < tmp_length) {\n-                    goto shortbuf;\n-                }\n-                if (!tmp_length) {\n-                    break;\n-                }\n\n-                if (siz < 3) {\n-                    goto shortbuf;\n-                }\n\n-                if (siz < 3) {\n-                    goto shortbuf;\n-                }\n\n-                if (siz < 2) {\n-                    goto shortbuf;\n-                }\n\n-                if (siz < 5) {\n-                    goto shortbuf;\n-                }\n\n-                if (siz < 7) {\n-                    goto shortbuf;\n-                }\n\n-                if (siz < 6) {\n-                    goto shortbuf;\n-                }\n\n-                if (siz < 4) {\n-                    goto shortbuf;\n-                }\n\n-                if (--siz && *event_data > 0x7f) {\n\n+                if (*event_data > 0x7f) {\n\n-                        if (!siz) {\n-                            break;\n-                        }\n\n-                        siz--;\n\n-                if (!siz) {\n-                    goto shortbuf;\n-                }\n\n-                if (--siz < tmp_length) {\n-                    goto shortbuf;\n-                }\n\n-                    if (!siz) {\n-                        break;\n-                    }\n\n-                    siz--;\n\n-            if (!siz) {\n-                goto shortbuf;\n-            }\n\n-            ret_cnt++;\n-            if (--siz < sysex_len) {\n-                goto shortbuf;\n-            }\n\n+            ret_cnt++;\n\n-shortbuf:\n-    _WM_GLOBAL_ERROR(__FUNCTION__, __LE__, WM_ERR_CORUPT, \"(input too short)\", 0);\n-    return 0;\n\n-        track_size = *midi_data++ << 24;\n-        track_size |= *midi_data++ << 16;\n-        track_size |= *midi_data++ << 8;\n-        track_size |= *midi_data++;\n\n+        tmp_val = *midi_data++ << 24;\n+        tmp_val |= *midi_data++ << 16;\n+        tmp_val |= *midi_data++ << 8;\n+        tmp_val |= *midi_data++;\n\n-        if (midi_size < track_size) {\n\n+        if (midi_size < tmp_val) {\n\n-        if (track_size < 3) {\n\n+        if (tmp_val < 3) {\n\n-        if ((midi_data[track_size - 3] != 0xFF) || (midi_data[track_size - 2] != 0x2F) || (midi_data[track_size - 1] != 0x00)) {\n\n+        if ((midi_data[tmp_val - 3] != 0xFF) || (midi_data[tmp_val - 2] != 0x2F) || (midi_data[tmp_val - 1] != 0x00)) {\n\n-        midi_data += track_size;\n-        midi_size -= track_size;\n\n+        track_size[i] = tmp_val;\n+        midi_data += tmp_val;\n+        midi_size -= tmp_val;\n\n-                    setup_ret = _WM_SetupMidiEvent(mdi, tracks[i], running_event[i]);\n\n+                    setup_ret = _WM_SetupMidiEvent(mdi, tracks[i], track_size[i], running_event[i]);\n\n-                setup_ret = _WM_SetupMidiEvent(mdi, tracks[i], running_event[i]);\n\n+                setup_ret = _WM_SetupMidiEvent(mdi, tracks[i], track_size[i], running_event[i]);\n\n-    track_size = malloc(sizeof(uint32_t) * no_tracks);\n\n-        tmp_val = *midi_data++ << 24;\n-        tmp_val |= *midi_data++ << 16;\n-        tmp_val |= *midi_data++ << 8;\n-        tmp_val |= *midi_data++;\n\n+        track_size = *midi_data++ << 24;\n+        track_size |= *midi_data++ << 16;\n+        track_size |= *midi_data++ << 8;\n+        track_size |= *midi_data++;\n\n-        if (midi_size < tmp_val) {\n\n+        if (midi_size < track_size) {\n\n-        if (tmp_val < 3) {\n\n+        if (track_size < 3) {\n\n-        if ((midi_data[tmp_val - 3] != 0xFF) || (midi_data[tmp_val - 2] != 0x2F) || (midi_data[tmp_val - 1] != 0x00)) {\n\n+        if ((midi_data[track_size - 3] != 0xFF) || (midi_data[track_size - 2] != 0x2F) || (midi_data[track_size - 1] != 0x00)) {\n\n-        track_size[i] = tmp_val;\n-        midi_data += tmp_val;\n-        midi_size -= tmp_val;\n\n+        midi_data += track_size;\n+        midi_size -= track_size;\n\n-            track_size[i]--;\n\n-        track_size[i]--;\n\n-                    setup_ret = _WM_SetupMidiEvent(mdi, tracks[i], track_size[i], running_event[i]);\n\n+                    setup_ret = _WM_SetupMidiEvent(mdi, tracks[i], running_event[i]);\n\n-                            track_size[i] -= 3;\n\n-                    track_size[i] -= setup_ret;\n\n-                            if (!track_size[i]) {\n-                                break;\n-                            }\n\n-                            track_size[i]--;\n\n-                    if (!track_size[i]) {\n-                        _WM_GLOBAL_ERROR(__FUNCTION__, __LE__, WM_ERR_CORUPT, \"(too short)\", 0);\n-                        goto _end;\n-                    }\n\n-                    track_size[i]--;\n\n-                setup_ret = _WM_SetupMidiEvent(mdi, tracks[i], track_size[i], running_event[i]);\n\n+                setup_ret = _WM_SetupMidiEvent(mdi, tracks[i], running_event[i]);\n\n-                track_size[i] -= setup_ret;\n\n-                        if (!track_size[i]) {\n-                            break;\n-                        }\n\n-                        track_size[i]--;\n\n-                if (!track_size[i]) {\n-                    _WM_GLOBAL_ERROR(__FUNCTION__, __LE__, WM_ERR_CORUPT, \"(too short)\", 0);\n-                    goto _end;\n-                }\n\n-                track_size[i]--;\n\n-    free(track_size);\n\n-                    if ((setup_ret = _WM_SetupMidiEvent(hmi_mdi,hmi_data,hmi_running_event[i])) == 0) {\n\n+                    if ((setup_ret = _WM_SetupMidiEvent(hmi_mdi,hmi_data,data_siz,hmi_running_event[i])) == 0) {\n\n-                        if (*hmi_data > 0x7f) {\n\n+                        if (data_siz && *hmi_data > 0x7f) {\n\n-                if (hmi_track_offset[i] >= hmi_size) {\n-                    _WM_GLOBAL_ERROR(__FUNCTION__, __LE__, WM_ERR_NOT_HMI, \"file too short\", 0);\n-                    goto _hmi_end;\n-                }\n-                data_siz = hmi_size - hmi_track_offset[i];\n\n-                        hmi_tmp += 4;\n\n-                        hmi_tmp = 8;\n-                    } else {\n-                        hmi_tmp = 4;\n\n-                    if (hmi_tmp > data_siz) {\n-                        _WM_GLOBAL_ERROR(__FUNCTION__, __LE__, WM_ERR_NOT_HMI, \"file too short\", 0);\n-                        goto _hmi_end;\n-                    }\n-                    data_siz -= hmi_tmp;\n\n-                    if ((setup_ret = _WM_SetupMidiEvent(hmi_mdi,hmi_data,data_siz,hmi_running_event[i])) == 0) {\n\n+                    if ((setup_ret = _WM_SetupMidiEvent(hmi_mdi,hmi_data,hmi_running_event[i])) == 0) {\n\n-                        data_siz -= setup_ret;\n\n-                        if (data_siz && *hmi_data > 0x7f) {\n\n+                        if (*hmi_data > 0x7f) {\n\n-                                if (!data_siz) {\n-                                    break;\n-                                }\n\n-                                data_siz--;\n\n-                        if (!data_siz) {\n-                            _WM_GLOBAL_ERROR(__FUNCTION__, __LE__, WM_ERR_NOT_HMI, \"file too short\", 0);\n-                            goto _hmi_end;\n-                        }\n\n-                        data_siz--;\n\n-                        data_siz -= setup_ret;\n\n-                if (data_siz && *hmi_data > 0x7f) {\n\n+                if (*hmi_data > 0x7f) {\n\n-                        if (!data_siz) {\n-                            break;\n-                        }\n\n-                        data_siz--;\n\n-                if (!data_siz) {\n-                    _WM_GLOBAL_ERROR(__FUNCTION__, __LE__, WM_ERR_NOT_HMI, \"file too short\", 0);\n-                    goto _hmi_end;\n-                }\n\n-                data_siz--;\n\n-                    if ((setup_ret = _WM_SetupMidiEvent(hmp_mdi, hmp_chunk[i], 0)) == 0) {\n\n+                    if ((setup_ret = _WM_SetupMidiEvent(hmp_mdi, hmp_chunk[i], chunk_length[i], 0)) == 0) {\n\n-        chunk_length[i] -= chunk_ofs[i];\n\n-                    chunk_length[i] -= 3;\n\n-                    if ((setup_ret = _WM_SetupMidiEvent(hmp_mdi, hmp_chunk[i], chunk_length[i], 0)) == 0) {\n\n+                    if ((setup_ret = _WM_SetupMidiEvent(hmp_mdi, hmp_chunk[i], 0)) == 0) {\n\n-                        chunk_length[i] -= 3;\n\n-                    chunk_length[i] -= setup_ret;\n\n-                if (chunk_length[i] && *hmp_chunk[i] < 0x80) {\n\n+                if (*hmp_chunk[i] < 0x80) {\n\n-                        if (! chunk_length[i]) {\n-                            break;\n-                        }\n\n-                        chunk_length[i]--;\n\n-                if (! chunk_length[i]) {\n-                    _WM_GLOBAL_ERROR(__FUNCTION__, __LE__, WM_ERR_NOT_HMP, \"file too short\", 0);\n-                    goto _hmp_end;\n-                }\n\n-                chunk_length[i]--;\n\n",
    "11": "+                        if (!siz) {\n+                            break;\n+                        }\n\n",
    "12": "+                        siz--;\n\n",
    "13": "+                if (!siz) {\n+                    goto shortbuf;\n+                }\n\n",
    "14": "+                if (--siz < tmp_length) {\n+                    goto shortbuf;\n+                }\n+                if (!tmp_length) {\n+                    break;\n+                }\n\n",
    "15": "+                        if (!siz) {\n+                            break;\n+                        }\n\n",
    "16": "+                        siz--;\n\n",
    "17": "+                if (!siz) {\n+                    goto shortbuf;\n+                }\n\n",
    "18": "+                if (--siz < tmp_length) {\n+                    goto shortbuf;\n+                }\n+                if (!tmp_length) {\n+                    break;\n+                }\n\n",
    "19": "+                        if (!siz) {\n+                            break;\n+                        }\n\n",
    "20": "+                        siz--;\n\n",
    "21": "+                if (!siz) {\n+                    goto shortbuf;\n+                }\n\n",
    "22": "+                if (--siz < tmp_length) {\n+                    goto shortbuf;\n+                }\n+                if (!tmp_length) {\n+                    break;\n+                }\n\n",
    "23": "+                        if (!siz) {\n+                            break;\n+                        }\n\n",
    "24": "+                        siz--;\n\n",
    "25": "+                if (!siz) {\n+                    goto shortbuf;\n+                }\n\n",
    "26": "+                if (--siz < tmp_length) {\n+                    goto shortbuf;\n+                }\n+                if (!tmp_length) {\n+                    break;\n+                }\n\n",
    "27": "+                        if (!siz) {\n+                            break;\n+                        }\n\n",
    "28": "+                        siz--;\n\n",
    "29": "+                if (!siz) {\n+                    goto shortbuf;\n+                }\n\n",
    "30": "+                if (--siz < tmp_length) {\n+                    goto shortbuf;\n+                }\n+                if (!tmp_length) {\n+                    break;\n+                }\n\n",
    "31": "+                        if (!siz) {\n+                            break;\n+                        }\n\n",
    "32": "+                        siz--;\n\n",
    "33": "+                if (!siz) {\n+                    goto shortbuf;\n+                }\n\n",
    "34": "+                if (--siz < tmp_length) {\n+                    goto shortbuf;\n+                }\n+                if (!tmp_length) {\n+                    break;\n+                }\n\n",
    "35": "+                        if (!siz) {\n+                            break;\n+                        }\n\n",
    "36": "+                        siz--;\n\n",
    "37": "+                if (!siz) {\n+                    goto shortbuf;\n+                }\n\n",
    "38": "+                if (--siz < tmp_length) {\n+                    goto shortbuf;\n+                }\n+                if (!tmp_length) {\n+                    break;\n+                }\n\n",
    "39": "+                if (siz < 3) {\n+                    goto shortbuf;\n+                }\n\n",
    "40": "+                if (siz < 3) {\n+                    goto shortbuf;\n+                }\n\n",
    "41": "+                if (siz < 2) {\n+                    goto shortbuf;\n+                }\n\n",
    "42": "+                if (siz < 5) {\n+                    goto shortbuf;\n+                }\n\n",
    "43": "+                if (siz < 7) {\n+                    goto shortbuf;\n+                }\n\n",
    "44": "+                if (siz < 6) {\n+                    goto shortbuf;\n+                }\n\n",
    "45": "+                if (siz < 4) {\n+                    goto shortbuf;\n+                }\n\n",
    "46": "-                if (*event_data > 0x7f) {\n\n+                if (--siz && *event_data > 0x7f) {\n\n",
    "47": "+                        if (!siz) {\n+                            break;\n+                        }\n\n",
    "48": "+                        siz--;\n\n",
    "49": "+                if (!siz) {\n+                    goto shortbuf;\n+                }\n\n",
    "50": "+                if (--siz < tmp_length) {\n+                    goto shortbuf;\n+                }\n\n",
    "51": "+                    if (!siz) {\n+                        break;\n+                    }\n\n",
    "52": "+                    siz--;\n\n",
    "53": "+            if (!siz) {\n+                goto shortbuf;\n+            }\n\n",
    "54": "+            ret_cnt++;\n+            if (--siz < sysex_len) {\n+                goto shortbuf;\n+            }\n\n",
    "55": "-            ret_cnt++;\n\n",
    "56": "+shortbuf:\n+    _WM_GLOBAL_ERROR(__FUNCTION__, __LE__, WM_ERR_CORUPT, \"(input too short)\", 0);\n+    return 0;\n\n",
    "57": "-    uint32_t track_size;\n\n",
    "58": "+    uint32_t *track_size;\n\n",
    "59": "+    track_size = malloc(sizeof(uint32_t) * no_tracks);\n\n",
    "60": "+            track_size[i]--;\n\n",
    "61": "+        track_size[i]--;\n\n",
    "62": "+                            track_size[i] -= 3;\n\n",
    "63": "+                    track_size[i] -= setup_ret;\n\n",
    "64": "+                            if (!track_size[i]) {\n+                                break;\n+                            }\n\n",
    "65": "+                            track_size[i]--;\n\n",
    "66": "+                    if (!track_size[i]) {\n+                        _WM_GLOBAL_ERROR(__FUNCTION__, __LE__, WM_ERR_CORUPT, \"(too short)\", 0);\n+                        goto _end;\n+                    }\n\n",
    "67": "+                    track_size[i]--;\n\n",
    "68": "+                track_size[i] -= setup_ret;\n\n",
    "69": "+                        if (!track_size[i]) {\n+                            break;\n+                        }\n\n",
    "70": "+                        track_size[i]--;\n\n",
    "71": "+                if (!track_size[i]) {\n+                    _WM_GLOBAL_ERROR(__FUNCTION__, __LE__, WM_ERR_CORUPT, \"(too short)\", 0);\n+                    goto _end;\n+                }\n\n",
    "72": "+                track_size[i]--;\n\n",
    "73": "+    free(track_size);\n\n",
    "74": "+    uint32_t track_size;\n\n-    uint32_t *track_size;\n\n",
    "75": "+    uint32_t data_siz;\n\n",
    "76": "-    (hmi_size);\n\n",
    "77": "+                if (hmi_track_offset[i] >= hmi_size) {\n+                    _WM_GLOBAL_ERROR(__FUNCTION__, __LE__, WM_ERR_NOT_HMI, \"file too short\", 0);\n+                    goto _hmi_end;\n+                }\n+                data_siz = hmi_size - hmi_track_offset[i];\n\n",
    "78": "+                        hmi_tmp += 4;\n\n",
    "79": "+                        hmi_tmp = 8;\n+                    } else {\n+                        hmi_tmp = 4;\n\n",
    "80": "+                    if (hmi_tmp > data_siz) {\n+                        _WM_GLOBAL_ERROR(__FUNCTION__, __LE__, WM_ERR_NOT_HMI, \"file too short\", 0);\n+                        goto _hmi_end;\n+                    }\n+                    data_siz -= hmi_tmp;\n\n",
    "81": "+                        data_siz -= setup_ret;\n\n",
    "82": "+                                if (!data_siz) {\n+                                    break;\n+                                }\n\n",
    "83": "+                                data_siz--;\n\n",
    "84": "+                        if (!data_siz) {\n+                            _WM_GLOBAL_ERROR(__FUNCTION__, __LE__, WM_ERR_NOT_HMI, \"file too short\", 0);\n+                            goto _hmi_end;\n+                        }\n\n",
    "85": "+                        data_siz--;\n\n",
    "86": "+                        data_siz -= setup_ret;\n\n",
    "87": "-                if (*hmi_data > 0x7f) {\n\n+                if (data_siz && *hmi_data > 0x7f) {\n\n",
    "88": "+                        if (!data_siz) {\n+                            break;\n+                        }\n\n",
    "89": "+                        data_siz--;\n\n",
    "90": "+                if (!data_siz) {\n+                    _WM_GLOBAL_ERROR(__FUNCTION__, __LE__, WM_ERR_NOT_HMI, \"file too short\", 0);\n+                    goto _hmi_end;\n+                }\n\n",
    "91": "+                data_siz--;\n\n",
    "92": "-    uint32_t data_siz;\n\n",
    "93": "+    (hmi_size);\n\n",
    "94": "+        chunk_length[i] -= chunk_ofs[i];\n\n",
    "95": "+                    chunk_length[i] -= 3;\n\n",
    "96": "+                        chunk_length[i] -= 3;\n\n",
    "97": "+                    chunk_length[i] -= setup_ret;\n\n",
    "98": "-                if (*hmp_chunk[i] < 0x80) {\n\n+                if (chunk_length[i] && *hmp_chunk[i] < 0x80) {\n\n",
    "99": "+                        if (! chunk_length[i]) {\n+                            break;\n+                        }\n\n",
    "100": "+                        chunk_length[i]--;\n\n",
    "101": "+                if (! chunk_length[i]) {\n+                    _WM_GLOBAL_ERROR(__FUNCTION__, __LE__, WM_ERR_NOT_HMP, \"file too short\", 0);\n+                    goto _hmp_end;\n+                }\n\n",
    "102": "+                chunk_length[i]--;\n\n",
    "103": "-                        if ((setup_ret = _WM_SetupMidiEvent(xmi_mdi,xmi_data,0)) == 0) {\n\n+                        if ((setup_ret = _WM_SetupMidiEvent(xmi_mdi,xmi_data, xmi_size, 0)) == 0) {\n\n",
    "104": "-                        if ((setup_ret = _WM_SetupMidiEvent(xmi_mdi,xmi_data, xmi_size, 0)) == 0) {\n\n+                        if ((setup_ret = _WM_SetupMidiEvent(xmi_mdi,xmi_data,0)) == 0) {\n\n"
}