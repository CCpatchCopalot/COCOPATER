{
    "0": "-    register Image *curr, *next;\n\n+    register Image *image, *next;\n\n",
    "1": "-    curr=GetFirstImageInList(*images);\n-    for (; (next=GetNextImageInList(curr)) != (Image *) NULL; curr=next) {\n-        if ( curr->columns != next->columns || curr->rows != next->rows || curr->page.x != next->page.x || curr->page.y != next->page.y ) {\n\n+    image=GetFirstImageInList(*images);\n+    for ( ; (next=GetNextImageInList(image)) != (Image *) NULL; image=next) {\n+        if ((image->columns != next->columns) || (image->rows != next->rows) || (image->page.x != next->page.x) || (image->page.y != next->page.y)) {\n\n-        bounds=CompareImagesBounds(curr,next,CompareAnyLayer,exception);\n\n+        bounds=CompareImagesBounds(image,next,CompareAnyLayer,exception);\n\n-            time = curr->delay*1000/curr->ticks_per_second;\n-            time += next->delay*1000/next->ticks_per_second;\n\n+            time=1000*image->delay*PerceptibleReciprocal(image->ticks_per_second);\n+            time+=1000*next->delay*PerceptibleReciprocal(next->ticks_per_second);\n\n-            next->delay = time*curr->ticks_per_second/1000;\n-            next->iterations = curr->iterations;\n-            *images = curr;\n\n+            next->delay=time*image->ticks_per_second/1000;\n+            next->iterations=image->iterations;\n+            *images=image;\n\n"
}