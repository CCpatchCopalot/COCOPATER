{
    "0": "+    if (sz < 8) {\n+        return NULL;\n+    }\n\n",
    "1": "-    if (sz < 8) {\n-        return NULL;\n-    }\n\n-    if (sz < 8) {\n-        return NULL;\n-    }\n\n-    if (!sz) {\n\n+    if (!sz || sz == UT64_MAX) {\n+        return NULL;\n+    }\n+#if 0\n+    if (sz < 8) {\n\n-    if (!attr) {\n-        return NULL;\n-    }\n\n+    if (attr) {\n\n-    if (!sz || sz == UT64_MAX) {\n-        return NULL;\n-    }\n-#if 0\n-    if (sz < 8) {\n\n+    if (!sz) {\n\n-#endif\n\n-    if (attr) {\n\n+    if (!attr) {\n+        return NULL;\n+    }\n\n-    if (!buffer || sz < 1) {\n\n+    if (!bin || !buffer || sz < 8) {\n\n-    if (!bin || !buffer || sz < 8) {\n\n+    if (!buffer || sz < 1) {\n\n-    RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n\n+    attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n\n-    if (sz < 8) {\n-        return NULL;\n-    }\n\n-    if (!se) {\n-        return NULL;\n-    }\n\n+    if (se) {\n\n-    if (se) {\n\n+    if (!se) {\n+        return NULL;\n+    }\n\n-    if (sz < 8) {\n-        return NULL;\n-    }\n\n-    attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n-    offset += 6;\n-    if (buf_offset + offset + 8 > sz) {\n-        eprintf (\"Invalid amount of inner classes\\n\");\n\n+    if (sz < 8) {\n\n-    if (attr == NULL) {\n-        return attr;\n\n+    RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n+    if (!attr) {\n+        return NULL;\n\n-        if (buf_offset + offset + 8 > sz) {\n\n+        if (offset + 8 > sz) {\n\n-    if (sz < 8) {\n\n+    attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n+    offset += 6;\n+    if (buf_offset + offset + 8 > sz) {\n+        eprintf (\"Invalid amount of inner classes\\n\");\n\n-    RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n-    if (!attr) {\n-        return NULL;\n\n+    if (attr == NULL) {\n+        return attr;\n\n-    offset += 6;\n\n-        if (offset + 8 > sz) {\n\n+        if (buf_offset + offset + 8 > sz) {\n\n-    if (sz < 8) {\n-        return NULL;\n-    }\n\n-    if (sz < 8) {\n-        return NULL;\n-    }\n\n-    if (sz < 8) {\n-        return NULL;\n-    }\n\n-    ut64 offset = 0;\n\n+    if (sz < 8) {\n+        return NULL;\n+    }\n\n-    attr->size = offset;\n\n+    attr->size = 6;\n\n-    if (sz < 8) {\n-        return NULL;\n-    }\n\n+    ut64 offset = 0;\n\n+    offset += 6;\n\n-    attr->size = 6;\n\n+    attr->size = offset;\n\n-    if (buf_offset + 8 > sz) {\n\n+    if (sz < 8) {\n\n-    if (sz < 8) {\n\n+    if (buf_offset + 8 > sz) {\n\n-    RBinJavaAttrInfo *attr = NULL;\n-    attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n\n+    if (sz < 8) {\n+        return NULL;\n+    }\n+    RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n\n-    if (sz < 8) {\n-        return NULL;\n-    }\n-    RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n\n+    RBinJavaAttrInfo *attr = NULL;\n+    attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n\n",
    "2": "+    if (sz < 8) {\n+        return NULL;\n+    }\n\n",
    "3": "+#endif\n\n",
    "4": "+    }\n\n",
    "5": "-    }\n\n-    }\n\n",
    "6": "-    RBinJavaAttrInfo *attr;\n\n",
    "7": "-    attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n\n+    RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n\n",
    "8": "+    RBinJavaAttrInfo *attr;\n\n+    RBinJavaAttrInfo *attr = NULL;\n\n",
    "9": "+    if (sz < 8) {\n+        return NULL;\n+    }\n\n",
    "10": "+    }\n\n",
    "11": "+    if (sz < 8) {\n+        return NULL;\n+    }\n\n",
    "12": "-    RBinJavaAttrInfo *attr = NULL;\n\n",
    "13": "+    offset += 6;\n\n",
    "14": "-    ut64 sz = 0;\n-    if (evp == NULL) {\n-        return sz;\n-    }\n-    sz += 2;\n-    if (evp->value) {\n\n+    ut64 sz = 2;\n+    if (evp && evp->value) {\n\n-    ut64 sz = 2;\n-    if (evp && evp->value) {\n\n+    ut64 sz = 0;\n+    if (evp == NULL) {\n+        return sz;\n+    }\n+    sz += 2;\n+    if (evp->value) {\n\n",
    "15": "-    RBinJavaAnnotation *annotation = NULL;\n\n",
    "16": "-    annotation = R_NEW0 (RBinJavaAnnotation);\n\n+    if (sz < 8) {\n+        return NULL;\n+    }\n+    RBinJavaAnnotation *annotation = R_NEW0 (RBinJavaAnnotation);\n\n+    RBinJavaAnnotation *annotation = NULL;\n\n-    if (sz < 8) {\n-        return NULL;\n-    }\n-    RBinJavaAnnotation *annotation = R_NEW0 (RBinJavaAnnotation);\n\n+    annotation = R_NEW0 (RBinJavaAnnotation);\n\n",
    "17": "+    if (sz < 8) {\n+        return NULL;\n+    }\n\n",
    "18": "+    if (sz < 8) {\n+        return NULL;\n+    }\n\n",
    "19": "+    if (sz < 8) {\n+        return NULL;\n+    }\n\n",
    "20": "-    offset += 6;\n\n"
}