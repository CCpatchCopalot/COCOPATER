{
    "0": "+    u32 i, max_chunks=0;\n+    if (ptr->ChunkOffset->type == GF_ISOM_BOX_TYPE_STCO) {\n+        max_chunks = ((GF_ChunkOffsetBox *)ptr->ChunkOffset)->nb_entries;\n+    } else if (ptr->ChunkOffset->type == GF_ISOM_BOX_TYPE_CO64) {\n+        max_chunks = ((GF_ChunkOffsetBox *)ptr->ChunkOffset)->nb_entries;\n+    }\n+    for (i=0; i<ptr->SampleToChunk->nb_entries; i++) {\n+        GF_StscEntry *ent = &ptr->SampleToChunk->entries[i];\n+        if (!i && (ent->firstChunk!=1)) {\n+            GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAER, (\"[iso file] first_chunk of first entry shall be 1 but is %u\\n\", ent->firstChunk));\n+            return GF_ISOM_VALID_FILE;\n+        }\n+        if (ptr->SampleToChunk->entries[i].firstChunk > max_chunks) {\n+            GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAER, (\"[iso file] first_chunk is %u but number of chunks defined %u\\n\", ptr->SampleToChunk->entries[i].firstChunk, max_chunks));\n+            return GF_ISOM_VALID_FILE;\n+        }\n+        if (i+1 == ptr->SampleToChunk->nb_entries) {\n+            break;\n+        }\n+        GF_StscEntry *next_ent = &ptr->SampleToChunk->entries[i+1];\n+        if (next_ent->firstChunk < ent->firstChunk) {\n+            GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAER, (\"[iso file] first_chunk (%u) for entry %u is greater than first_chunk (%u) for entry %u\\n\", i+1, ent->firstChunk, i+2, next_ent->firstChunk));\n+            return GF_ISOM_VALID_FILE;\n+        }\n+    }\n\n",
    "1": "+    if (e) {\n\n+    switch (ptr->descriptor->tag) {\n+    case GF_ODF_ISOM_OD_TAG:\n+    case GF_ODF_ISOM_IOD_TAG:\n+        break;\n+    default:\n+        GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAER, (\"[iso file] Invalid descriptor in iods, tag %u found but only %u or %u allowed\\n\", ptr->descriptor->tag, GF_ODF_ISOM_IOD_TAG, GF_ODF_ISOM_OD_TAG ));\n+        return GF_ISOM_VALID_FILE;\n+    }\n+    return GF_OK;\n+}\n\n",
    "2": "-        if (trak == the_trak) {\n-            continue;\n-        }\n\n"
}