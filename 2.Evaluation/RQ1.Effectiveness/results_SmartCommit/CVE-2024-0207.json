{
    "0": "-static gint read_qpack_prefixed_integer(guint8 *buf, guint8 *end, gint prefix, guint64 *out_result, gboolean *out_fin, gboolean *out_flag) {\n\n+static gint read_qpack_prefixed_integer(tvbuff_t *tvb, int offset, gint prefix, guint64 *out_result, gboolean *out_fin, gboolean *out_flag) {\n+    const uint8_t *buf = tvb_get_ptr(tvb, offset, -1);\n+    const uint8_t *end = buf + tvb_captured_length_remaining(tvb, offset);\n\n-static gint read_qpack_prefixed_integer(tvbuff_t *tvb, int offset, gint prefix, guint64 *out_result, gboolean *out_fin, gboolean *out_flag) {\n-    const uint8_t *buf = tvb_get_ptr(tvb, offset, -1);\n-    const uint8_t *end = buf + tvb_captured_length_remaining(tvb, offset);\n\n+static gint read_qpack_prefixed_integer(guint8 *buf, guint8 *end, gint prefix, guint64 *out_result, gboolean *out_fin, gboolean *out_flag) {\n\n",
    "1": "-    gint remaining, remaining_captured, retval, decoded = 0;\n\n+    gint remaining, remaining_captured, retval;\n\n-    decoded = dissect_http3_qpack_encoder_stream(tvb, pinfo, qpack_update_tree, offset, qpack_buf, (guint)remaining, http3_stream);\n\n+    dissect_http3_qpack_encoder_stream(tvb, pinfo, qpack_update_tree, offset, http3_stream);\n\n-    dissect_http3_qpack_encoder_stream(tvb, pinfo, qpack_update_tree, offset, http3_stream);\n\n+    decoded = dissect_http3_qpack_encoder_stream(tvb, pinfo, qpack_update_tree, offset, qpack_buf, (guint)remaining, http3_stream);\n\n+    (void)decoded;\n\n",
    "2": "-        gint qpack_buf_len = decoded - offset, nread;\n\n+        gint qpack_buf_len = remaining, nread;\n\n",
    "3": "-    (void)decoded;\n\n",
    "4": "-    gint remaining, remaining_captured, retval;\n\n+    gint remaining, remaining_captured, retval, decoded = 0;\n\n",
    "5": "-        gint qpack_buf_len = remaining, nread;\n\n+        gint qpack_buf_len = decoded - offset, nread;\n\n",
    "6": "-static gint dissect_http3_qpack_encoder_stream(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, int offset, uint8_t *qpack_buf, guint remaining, http3_stream_info_t *http3_stream ) {\n-    guint remaining_captured;\n\n+static gint dissect_http3_qpack_encoder_stream(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, int offset, http3_stream_info_t *http3_stream ) {\n+    guint remaining;\n\n-    guint can_continue = 1;\n-    uint8_t *end = qpack_buf + remaining;\n-    remaining_captured = tvb_captured_length_remaining(tvb, offset);\n-    DISSECTOR_ASSERT(remaining_captured == remaining);\n-    if (qpack_buf == NULL || remaining <= 0) {\n-        HTTP3_DISSECTOR_DPRTF(\"Exiting qpack_buf=%p remaining=%d\", qpack_buf, remaining);\n-        return 0;\n-    }\n\n+    volatile bool can_continue = true;\n+    remaining = tvb_captured_length_remaining(tvb, offset);\n\n-        gint opcode_offset = 0;\n\n+        gint opcode_offset = offset + decoded;\n\n-        opcode = qpack_buf[decoded] & QPACK_OPCODE_MASK;\n\n+        TRY {\n+            opcode = tvb_get_guint8(tvb, opcode_offset) & QPACK_OPCODE_MASK;\n\n-            opcode_offset = offset + decoded;\n-            decoded += read_qpack_prefixed_integer(qpack_buf + decoded, end, 6, &table_entry, &fin, NULL);\n\n+                decoded += read_qpack_prefixed_integer(tvb, opcode_offset, 6, &table_entry, &fin, NULL);\n\n-            decoded += read_qpack_prefixed_integer(qpack_buf + decoded, end, 7, &val_bytes_len, &fin, &value_huffman);\n\n+                decoded += read_qpack_prefixed_integer(tvb, value_offset, 7, &val_bytes_len, &fin, &value_huffman);\n\n-            name_len_offset = opcode_offset = offset + decoded;\n-            decoded += read_qpack_prefixed_integer(qpack_buf + decoded, end, 5, &name_bytes_len, &fin, &name_huffman);\n\n+                name_len_offset = offset + decoded;\n+                decoded += read_qpack_prefixed_integer(tvb, name_len_offset, 5, &name_bytes_len, &fin, &name_huffman);\n\n-            decoded += read_qpack_prefixed_integer(qpack_buf + decoded, end, 7, &val_bytes_len, &fin, &value_huffman);\n\n+                decoded += read_qpack_prefixed_integer(tvb, val_len_offset, 7, &val_bytes_len, &fin, &value_huffman);\n\n-            opcode_offset = offset + decoded;\n-            decoded += read_qpack_prefixed_integer(qpack_buf + decoded, end, 5, &dynamic_capacity, &fin, NULL);\n\n+                decoded += read_qpack_prefixed_integer(tvb, opcode_offset, 5, &dynamic_capacity, &fin, NULL);\n\n-            opcode_offset = offset + decoded;\n-            inc = read_qpack_prefixed_integer(qpack_buf + decoded, end, 5, &duplicate_of, &fin, NULL);\n\n+                inc = read_qpack_prefixed_integer(tvb, opcode_offset, 5, &duplicate_of, &fin, NULL);\n\n-            can_continue = 0;\n\n+                can_continue = false;\n+            }\n+        }\n+        CATCH(ReportedBoundsError) {\n+            decoded = opcode_offset - offset;\n+            can_continue = false;\n\n-static gint dissect_http3_qpack_encoder_stream(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, int offset, http3_stream_info_t *http3_stream ) {\n-    guint remaining;\n\n+static gint dissect_http3_qpack_encoder_stream(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, int offset, uint8_t *qpack_buf, guint remaining, http3_stream_info_t *http3_stream ) {\n+    guint remaining_captured;\n\n-    volatile bool can_continue = true;\n-    remaining = tvb_captured_length_remaining(tvb, offset);\n\n+    guint can_continue = 1;\n+    uint8_t *end = qpack_buf + remaining;\n+    remaining_captured = tvb_captured_length_remaining(tvb, offset);\n+    DISSECTOR_ASSERT(remaining_captured == remaining);\n+    if (qpack_buf == NULL || remaining <= 0) {\n+        HTTP3_DISSECTOR_DPRTF(\"Exiting qpack_buf=%p remaining=%d\", qpack_buf, remaining);\n+        return 0;\n+    }\n\n-        gint opcode_offset = offset + decoded;\n\n+        gint opcode_offset = 0;\n\n-        TRY {\n-            opcode = tvb_get_guint8(tvb, opcode_offset) & QPACK_OPCODE_MASK;\n\n+        opcode = qpack_buf[decoded] & QPACK_OPCODE_MASK;\n\n-                decoded += read_qpack_prefixed_integer(tvb, opcode_offset, 6, &table_entry, &fin, NULL);\n\n+            opcode_offset = offset + decoded;\n+            decoded += read_qpack_prefixed_integer(qpack_buf + decoded, end, 6, &table_entry, &fin, NULL);\n\n-                decoded += read_qpack_prefixed_integer(tvb, value_offset, 7, &val_bytes_len, &fin, &value_huffman);\n\n+            decoded += read_qpack_prefixed_integer(qpack_buf + decoded, end, 7, &val_bytes_len, &fin, &value_huffman);\n\n-                name_len_offset = offset + decoded;\n-                decoded += read_qpack_prefixed_integer(tvb, name_len_offset, 5, &name_bytes_len, &fin, &name_huffman);\n\n+            name_len_offset = opcode_offset = offset + decoded;\n+            decoded += read_qpack_prefixed_integer(qpack_buf + decoded, end, 5, &name_bytes_len, &fin, &name_huffman);\n\n-                decoded += read_qpack_prefixed_integer(tvb, val_len_offset, 7, &val_bytes_len, &fin, &value_huffman);\n\n+            decoded += read_qpack_prefixed_integer(qpack_buf + decoded, end, 7, &val_bytes_len, &fin, &value_huffman);\n\n-                decoded += read_qpack_prefixed_integer(tvb, opcode_offset, 5, &dynamic_capacity, &fin, NULL);\n\n+            opcode_offset = offset + decoded;\n+            decoded += read_qpack_prefixed_integer(qpack_buf + decoded, end, 5, &dynamic_capacity, &fin, NULL);\n\n-                inc = read_qpack_prefixed_integer(tvb, opcode_offset, 5, &duplicate_of, &fin, NULL);\n\n+            opcode_offset = offset + decoded;\n+            inc = read_qpack_prefixed_integer(qpack_buf + decoded, end, 5, &duplicate_of, &fin, NULL);\n\n-                can_continue = false;\n-            }\n-        }\n-        CATCH(ReportedBoundsError) {\n-            decoded = opcode_offset - offset;\n-            can_continue = false;\n\n+            can_continue = 0;\n\n",
    "7": "+        ENDTRY;\n\n",
    "8": "-        ENDTRY;\n\n"
}