diff --git a/libr/asm/asm.c b/libr/asm/asm.c
index 60bdf9b3d3b53..412c089456e13 100644
--- a/libr/asm/asm.c
+++ b/libr/asm/asm.c
@@ -471,13 +471,15 @@ R_API int r_asm_disassemble(RAsm *a, RAsmOp *op, const ut8 *buf, int len) {
 	if (a->ofilter) {
 		r_parse_parse (a->ofilter, op->buf_asm, op->buf_asm);
 	}
+	// XXX this is crap and needs proper fix
 	int dstlen = R_MIN ((R_ASM_BUFSIZE -1), oplen);
 	int cpylen = R_MIN (dstlen, len);
 	if (cpylen > 0) {
 		memcpy (op->buf, buf, cpylen);
 		const int addrbytes = a->user ? ((RCore *)a->user)->io->addrbytes : 1;
-		r_hex_bin2str (buf, R_MIN (addrbytes * oplen,
-					(sizeof (op->buf_hex) - 1) / 2), op->buf_hex);
+		int len = R_MIN (addrbytes * oplen, (sizeof (op->buf_hex) - 1) / 2);
+		// len is the length in input buffer, not len of output, so we must / 2
+		r_hex_bin2str (op->buf, len, op->buf_hex);
 	}
 	return ret;
 }
diff --git a/libr/util/hex.c b/libr/util/hex.c
index 58a6c25bac0f1..08279c1466234 100644
--- a/libr/util/hex.c
+++ b/libr/util/hex.c
@@ -313,12 +313,13 @@ R_API int r_hex_pair2bin(const char *arg) {
 
 R_API int r_hex_bin2str(const ut8 *in, int len, char *out) {
 	int i, idx;
-	char tmp[5];
-	if (len < 0)
+	char tmp[8];
+	if (len < 0) {
 		return 0;
+	}
 	for (idx = i = 0; i < len; i++, idx += 2)  {
 		snprintf (tmp, sizeof (tmp), "%02x", in[i]);
-		memcpy (out+idx, tmp, 2);
+		memcpy (out + idx, tmp, 2);
 	}
 	out[idx] = 0;
 	return len;
