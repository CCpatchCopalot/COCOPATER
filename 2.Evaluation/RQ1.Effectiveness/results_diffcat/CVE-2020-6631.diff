diff --git a/applications/mp42ts/main.c b/applications/mp42ts/main.c
index 6cb7d8b27..1d6287011 100644
--- a/applications/mp42ts/main.c
+++ b/applications/mp42ts/main.c
@@ -435,7 +435,7 @@ static GF_Err mp4_input_ctrl(GF_ESInterface *ifce, u32 act_type, void *param)
 			pck.cts += + priv->cts_dts_shift;
 			pck.flags |= GF_ESI_DATA_HAS_DTS;
 		}
-		
+
 		if (priv->sample->CTS_Offset) {
 			pck.cts += priv->sample->CTS_Offset;
 			pck.flags |= GF_ESI_DATA_HAS_DTS;
@@ -618,6 +618,7 @@ static void fill_isom_es_ifce(M2TSSource *source, GF_ESInterface *ifce, GF_ISOFi
 	ifce->timescale = gf_isom_get_media_timescale(mp4, track_num);
 	ifce->duration = gf_isom_get_media_timescale(mp4, track_num);
 	avg_rate = gf_isom_get_media_data_size(mp4, track_num);
+	if (!avg_rate) return;
 	avg_rate *= ifce->timescale * 8;
 	if (0!=(duration=gf_isom_get_media_duration(mp4, track_num)))
 		avg_rate /= duration;
@@ -633,7 +634,7 @@ static void fill_isom_es_ifce(M2TSSource *source, GF_ESInterface *ifce, GF_ISOFi
 		GF_LOG(GF_LOG_ERROR, GF_LOG_APP, ("Failed to allocate interface SLConfig\n"));
 		return;
 	}
-	
+
 	ifce->sl_config->tag = GF_ODF_SLC_TAG;
 	ifce->sl_config->useAccessUnitStartFlag = 1;
 	ifce->sl_config->useAccessUnitEndFlag = 1;
@@ -1516,6 +1517,7 @@ static Bool open_source(M2TSSource *source, char *src, u32 carousel_rate, u32 mp
 				continue;
 
 			fill_isom_es_ifce(source, &source->streams[i], source->mp4, i+1, bifs_use_pes, compute_max_size);
+			if (!source->streams[i].input_udta) continue;
 			if (min_offset > ((GF_ESIMP4 *)source->streams[i].input_udta)->ts_offset) {
 				min_offset = ((GF_ESIMP4 *)source->streams[i].input_udta)->ts_offset;
 				min_offset_timescale = source->streams[i].timescale;
@@ -1805,7 +1807,7 @@ static Bool open_source(M2TSSource *source, char *src, u32 carousel_rate, u32 mp
 					GF_LOG(GF_LOG_ERROR, GF_LOG_APP, ("Failed to allocate audio input handler\n"));
 					return 0;
 				}
-				
+
 				((GF_ESIStream*)source->streams[source->nb_streams].input_udta)->vers_inc = 1;	/*increment version number at every audio update*/
 				assert( source );
 				//assert( source->iod);
@@ -2941,4 +2943,3 @@ exit:
 #endif
 	return 0;
 }
-
diff --git a/src/isomedia/isom_read.c b/src/isomedia/isom_read.c
index d9db20211..a6dc3cdc5 100644
--- a/src/isomedia/isom_read.c
+++ b/src/isomedia/isom_read.c
@@ -3309,6 +3309,7 @@ u64 gf_isom_get_media_data_size(GF_ISOFile *movie, u32 trackNumber)
 	GF_TrackBox *tk = gf_isom_get_track_from_file(movie, trackNumber);
 	if (!tk) return 0;
 	stsz = tk->Media->information->sampleTable->SampleSize;
+	if (!stsz) return 0;
 	if (stsz->sampleSize) return stsz->sampleSize*stsz->sampleCount;
 	size = 0;
 	for (i=0; i<stsz->sampleCount; i++) size += stsz->sizes[i];
diff --git a/src/media_tools/m2ts_mux.c b/src/media_tools/m2ts_mux.c
index 3b7472769..6894831d2 100644
--- a/src/media_tools/m2ts_mux.c
+++ b/src/media_tools/m2ts_mux.c
@@ -712,6 +712,8 @@ u32 gf_m2ts_stream_process_pmt(GF_M2TS_Mux *muxer, GF_M2TS_Mux_Stream *stream)
 		u32 info_length = 0, es_info_length = 0;
 		GF_BitStream *bs;
 
+		if (!stream->program->pcr)
+			abort();
 
 		bs = gf_bs_new(NULL,0,GF_BITSTREAM_WRITE);
 		gf_bs_write_int(bs,	0x7, 3); // reserved
@@ -2200,7 +2202,7 @@ GF_M2TS_Mux_Stream *gf_m2ts_program_stream_add(GF_M2TS_Mux_Program *program, str
 				base_st = gf_m2ts_find_stream(program, 0, ifce->depends_on_stream);
 				if (base_st) base_st->force_single_au = GF_TRUE;
 			}
-			
+
 			/*make sure we send AU delim NALU in same PES as first VCL NAL: 7 bytes (4 start code + 2 nal header + 1 AU delim)
 			+ 4 byte start code + first nal header*/
 			stream->min_bytes_copy_from_next = 12;
@@ -2860,4 +2862,3 @@ send_pck:
 }
 
 #endif /*GPAC_DISABLE_MPEG2TS_MUX*/
-
