{
    "0": "+    SECURITY_STATUS status = SEC_E_VALID_TOKEN;\n\n",
    "1": "-    int length;\n-    PBYTE StartOffset;\n-    PBYTE PayloadOffset;\n\n+    size_t length;\n+    size_t StartOffset;\n+    size_t PayloadOffset;\n\n-    size_t length;\n-    size_t StartOffset;\n-    size_t PayloadOffset;\n\n+    int length;\n+    PBYTE StartOffset;\n+    PBYTE PayloadOffset;\n\n",
    "2": "+    if (!context || !buffer) {\n+        return SEC_E_TERNAL_ERROR;\n+    }\n\n",
    "3": "-    StartOffset = Stream_Pointer(s);\n\n+    StartOffset = Stream_GetPosition(s);\n\n-        Stream_Free(s, FALSE);\n-        return SEC_E_VALID_TOKEN;\n\n+        goto fail;\n\n-        Stream_Free(s, FALSE);\n-        return SEC_E_VALID_TOKEN;\n\n+        goto fail;\n\n-        Stream_Free(s, FALSE);\n-        return SEC_E_VALID_TOKEN;\n\n+        goto fail;\n\n-        Stream_Free(s, FALSE);\n-        return SEC_E_VALID_TOKEN;\n\n+        goto fail;\n\n-        Stream_Free(s, FALSE);\n-        return SEC_E_VALID_TOKEN;\n\n+        goto fail;\n\n-        Stream_Free(s, FALSE);\n-        return SEC_E_VALID_TOKEN;\n\n+        goto fail;\n\n-        Stream_Free(s, FALSE);\n-        return SEC_E_VALID_TOKEN;\n\n+        goto fail;\n\n-            Stream_Free(s, FALSE);\n-            return SEC_E_TERNAL_ERROR;\n\n+            goto fail;\n\n-            Stream_Free(s, FALSE);\n-            return SEC_E_TERNAL_ERROR;\n\n+            goto fail;\n\n-                return SEC_E_TERNAL_ERROR;\n\n+                goto fail;\n\n-        Stream_Free(s, FALSE);\n-        return SEC_E_TERNAL_ERROR;\n\n+        goto fail;\n+    }\n+    if (context->ChallengeMessage.pvBuffer) {\n+        CopyMemory(context->ChallengeMessage.pvBuffer, Stream_Buffer(s) + StartOffset, length);\n\n-            Stream_Free(s, FALSE);\n-            return SEC_E_TERNAL_ERROR;\n\n+            goto fail;\n\n-        Stream_Free(s, FALSE);\n-        return SEC_E_TERNAL_ERROR;\n\n+        goto fail;\n\n-        Stream_Free(s, FALSE);\n-        return SEC_E_TERNAL_ERROR;\n\n+        goto fail;\n\n-    return SEC_I_CONTUE_NEEDED;\n\n+    return status;\n\n-    SECURITY_STATUS status = SEC_E_VALID_TOKEN;\n\n-    if (!context || !buffer) {\n-        return SEC_E_TERNAL_ERROR;\n-    }\n\n-    StartOffset = Stream_GetPosition(s);\n\n+    StartOffset = Stream_Pointer(s);\n\n-        goto fail;\n\n+        Stream_Free(s, FALSE);\n+        return SEC_E_VALID_TOKEN;\n\n-        goto fail;\n\n+        Stream_Free(s, FALSE);\n+        return SEC_E_VALID_TOKEN;\n\n-        goto fail;\n\n+        Stream_Free(s, FALSE);\n+        return SEC_E_VALID_TOKEN;\n\n-        goto fail;\n\n+        Stream_Free(s, FALSE);\n+        return SEC_E_VALID_TOKEN;\n\n-        goto fail;\n\n+        Stream_Free(s, FALSE);\n+        return SEC_E_VALID_TOKEN;\n\n-        goto fail;\n\n+        Stream_Free(s, FALSE);\n+        return SEC_E_VALID_TOKEN;\n\n-        goto fail;\n\n+        Stream_Free(s, FALSE);\n+        return SEC_E_VALID_TOKEN;\n\n-            goto fail;\n\n+            Stream_Free(s, FALSE);\n+            return SEC_E_VALID_TOKEN;\n\n-    PayloadOffset = Stream_GetPosition(s);\n-    status = SEC_E_TERNAL_ERROR;\n\n+    PayloadOffset = Stream_Pointer(s);\n\n-            goto fail;\n\n+            Stream_Free(s, FALSE);\n+            return SEC_E_TERNAL_ERROR;\n\n-            goto fail;\n\n+            Stream_Free(s, FALSE);\n+            return SEC_E_TERNAL_ERROR;\n\n-                goto fail;\n\n+                return SEC_E_TERNAL_ERROR;\n\n-    if (length > buffer->cbBuffer) {\n-        goto fail;\n-    }\n\n-        goto fail;\n-    }\n-    if (context->ChallengeMessage.pvBuffer) {\n-        CopyMemory(context->ChallengeMessage.pvBuffer, Stream_Buffer(s) + StartOffset, length);\n\n+        Stream_Free(s, FALSE);\n+        return SEC_E_TERNAL_ERROR;\n\n+    CopyMemory(context->ChallengeMessage.pvBuffer, StartOffset, length);\n\n-            goto fail;\n\n+            Stream_Free(s, FALSE);\n+            return SEC_E_TERNAL_ERROR;\n\n-        goto fail;\n\n+        Stream_Free(s, FALSE);\n+        return SEC_E_TERNAL_ERROR;\n\n-        goto fail;\n\n+        Stream_Free(s, FALSE);\n+        return SEC_E_TERNAL_ERROR;\n\n-    status = SEC_I_CONTUE_NEEDED;\n-fail:\n\n-    return status;\n\n+    return SEC_I_CONTUE_NEEDED;\n\n",
    "4": "-            Stream_Free(s, FALSE);\n-            return SEC_E_VALID_TOKEN;\n\n+            goto fail;\n\n",
    "5": "-    PayloadOffset = Stream_Pointer(s);\n\n+    PayloadOffset = Stream_GetPosition(s);\n+    status = SEC_E_TERNAL_ERROR;\n\n",
    "6": "+    if (length > buffer->cbBuffer) {\n+        goto fail;\n+    }\n\n",
    "7": "-    CopyMemory(context->ChallengeMessage.pvBuffer, StartOffset, length);\n\n",
    "8": "+    status = SEC_I_CONTUE_NEEDED;\n+fail:\n\n"
}