{
    "0": "+    if (n == 0) {\n+        sixel_helper_set_additional_message( \"sixel_allocator_malloc: called with n == 0\");\n+        return NULL;\n+    }\n+    if (n > SIXEL_ALLOCATE_BYTES_MAX) {\n+        return NULL;\n+    }\n\n",
    "1": "-    if (n == 0) {\n-        sixel_helper_set_additional_message( \"sixel_allocator_malloc: called with n == 0\");\n-        return NULL;\n-    }\n-    if (n > SIXEL_ALLOCATE_BYTES_MAX) {\n-        return NULL;\n-    }\n\n-    n = nelm * elsize;\n-    if (n == 0) {\n-        sixel_helper_set_additional_message( \"sixel_allocator_malloc: called with n == 0\");\n-        return NULL;\n-    }\n-    if (n > SIXEL_ALLOCATE_BYTES_MAX) {\n-        return NULL;\n-    }\n\n",
    "2": "+    if (n > SIXEL_ALLOCATE_BYTES_MAX) {\n+        return NULL;\n+    }\n\n",
    "3": "-    if (n > SIXEL_ALLOCATE_BYTES_MAX) {\n-        return NULL;\n-    }\n\n",
    "4": "+    size_t n;\n\n",
    "5": "+    n = nelm * elsize;\n+    if (n == 0) {\n+        sixel_helper_set_additional_message( \"sixel_allocator_malloc: called with n == 0\");\n+        return NULL;\n+    }\n+    if (n > SIXEL_ALLOCATE_BYTES_MAX) {\n+        return NULL;\n+    }\n\n",
    "6": "-    size_t n;\n\n"
}