{
    "0": "+    if (data.num_of_part > OGS_SBI_MAX_NUM_OF_PART) {\n+        ogs_fatal(\"Overflow num_of_part[%d]\", data.num_of_part);\n+        ogs_assert_if_reached();\n+    }\n\n",
    "1": "-        END\n-    }\n\n",
    "2": "+        END\n+    }\n\n",
    "3": "-    if (data.num_of_part > OGS_SBI_MAX_NUM_OF_PART) {\n-        ogs_fatal(\"Overflow num_of_part[%d]\", data.num_of_part);\n-        ogs_assert_if_reached();\n-    }\n\n",
    "4": "+        END\n+    }\n\n-        END\n-    }\n\n-    }\n\n",
    "5": "-    if (at && length) {\n\n+    if (data->num_of_part < OGS_SBI_MAX_NUM_OF_PART && at && length) {\n\n-    if (data->num_of_part < OGS_SBI_MAX_NUM_OF_PART && at && length) {\n\n+    if (at && length) {\n\n-        if (data->part[data->num_of_part].content_type)\n-            ogs_free(data->part[data->num_of_part].content_type);\n\n+        ogs_assert(data->part[data->num_of_part].content_type == NULL);\n\n-        if (data->part[data->num_of_part].content_id)\n-            ogs_free(data->part[data->num_of_part].content_id);\n\n+        ogs_assert(data->part[data->num_of_part].content_id == NULL);\n\n-    if (data->num_of_part < OGS_SBI_MAX_NUM_OF_PART && at && length) {\n\n+    if (at && length) {\n\n-        ogs_assert(data->part[data->num_of_part].content_type == NULL);\n\n+        if (data->part[data->num_of_part].content_type)\n+            ogs_free(data->part[data->num_of_part].content_type);\n\n-        ogs_assert(data->part[data->num_of_part].content_id == NULL);\n\n+        if (data->part[data->num_of_part].content_id)\n+            ogs_free(data->part[data->num_of_part].content_id);\n\n-    if (data->num_of_part < OGS_SBI_MAX_NUM_OF_PART) {\n\n",
    "6": "-        DEFAULT ogs_log_hexdump(OGS_LOG_FATAL, (unsigned char *)at, length);\n-        ogs_error(\"Unknown content_type [%s]\", data->part[data->num_of_part].content_type);\n\n+        DEFAULT ogs_error(\"Unknown content_type [%s]\", data->part[data->num_of_part].content_type);\n+        ogs_log_hexdump(OGS_LOG_ERROR, (unsigned char *)at, length);\n\n-        DEFAULT ogs_error(\"Unknown content_type [%s]\", data->part[data->num_of_part].content_type);\n-        ogs_log_hexdump(OGS_LOG_ERROR, (unsigned char *)at, length);\n\n+        DEFAULT ogs_log_hexdump(OGS_LOG_FATAL, (unsigned char *)at, length);\n+        ogs_error(\"Unknown content_type [%s]\", data->part[data->num_of_part].content_type);\n\n",
    "7": "-    if (at && length) {\n\n+    if (data->num_of_part < OGS_SBI_MAX_NUM_OF_PART && at && length) {\n\n",
    "8": "+    if (data->num_of_part < OGS_SBI_MAX_NUM_OF_PART) {\n\n",
    "9": "+    }\n\n",
    "10": "-        ogs_error(\"JSON parse error\");\n\n+        ogs_error(\"JSON parse error [%s]\", json);\n\n",
    "11": "-        ogs_error(\"JSON parse error [%s]\", json);\n\n+        ogs_error(\"JSON parse error\");\n\n",
    "12": "+    OpenAPI_ngap_ie_type_e ngapIeType = OpenAPI_ngap_ie_type_NULL;\n\n",
    "13": "+        ngapIeType = n2InfoContent->ngap_ie_type;\n\n",
    "14": "-    switch (n2InfoContent->ngap_ie_type) {\n\n+    switch (ngapIeType) {\n\n-        ogs_error(\"Not implemented ngap_ie_type[%d]\", n2InfoContent->ngap_ie_type);\n\n+        ogs_error(\"Not implemented ngapIeType[%d]\", ngapIeType);\n\n-    OpenAPI_ngap_ie_type_e ngapIeType = OpenAPI_ngap_ie_type_NULL;\n\n-        ngapIeType = n2InfoContent->ngap_ie_type;\n\n-    switch (ngapIeType) {\n\n+    switch (n2InfoContent->ngap_ie_type) {\n\n-        ogs_error(\"Not implemented ngapIeType[%d]\", ngapIeType);\n\n+        ogs_error(\"Not implemented ngap_ie_type[%d]\", n2InfoContent->ngap_ie_type);\n\n"
}