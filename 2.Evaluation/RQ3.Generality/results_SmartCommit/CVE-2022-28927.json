{
    "0": "-        if(!x.Script.empty()) {\n\n+        if(!x.Script.empty() && ext.authorized) {\n\n-        if(!x.Script.empty() && ext.authorized) {\n\n+        if(!x.Script.empty()) {\n\n",
    "1": "+        writeLog(0, \"Load preference settings in TOML format completed.\", LOG_LEVEL_FO);\n\n",
    "2": "-        writeLog(0, \"Load preference settings in TOML format completed.\", LOG_LEVEL_FO);\n\n-        writeLog(0, \"Reading preference settings...\", LOG_LEVEL_FO);\n\n+        writeLog(0, \"Loading preference settings...\", LOG_LEVEL_FO);\n\n-        writeLog(0, \"Read preference settings completed.\", LOG_LEVEL_FO);\n\n+        writeLog(0, \"Load preference settings in I format completed.\", LOG_LEVEL_FO);\n\n-        writeLog(0, \"Loading preference settings...\", LOG_LEVEL_FO);\n\n+        writeLog(0, \"Reading preference settings...\", LOG_LEVEL_FO);\n\n-        writeLog(0, \"Load preference settings in I format completed.\", LOG_LEVEL_FO);\n\n+        writeLog(0, \"Read preference settings completed.\", LOG_LEVEL_FO);\n\n",
    "3": "+            writeLog(0, e.what(), LOG_LEVEL_DEBUG);\n+            writeLog(0, \"Unable to load preference settings as YAML.\", LOG_LEVEL_DEBUG);\n\n",
    "4": "+            writeLog(0, \"Unable to load preference settings as TOML.\", LOG_LEVEL_DEBUG);\n\n",
    "5": "-            writeLog(0, \"Unable to load preference settings. Reason: \" + ini.GetLastError(), LOG_LEVEL_FATAL);\n\n+            writeLog(0, \"Unable to load preference settings as I. Reason: \" + ini.GetLastError(), LOG_LEVEL_FATAL);\n\n-            writeLog(0, e.what(), LOG_LEVEL_DEBUG);\n-            writeLog(0, \"Unable to load preference settings as YAML.\", LOG_LEVEL_DEBUG);\n\n-            writeLog(0, \"Unable to load preference settings as TOML.\", LOG_LEVEL_DEBUG);\n\n-            writeLog(0, \"Unable to load preference settings as I. Reason: \" + ini.GetLastError(), LOG_LEVEL_FATAL);\n\n+            writeLog(0, \"Unable to load preference settings. Reason: \" + ini.GetLastError(), LOG_LEVEL_FATAL);\n\n",
    "6": "-    script_safe_runner(parse_set.js_runtime, parse_set.js_context, [&](qjs::Context &ctx) {\n\n+    if(authorized) {\n+        script_safe_runner(parse_set.js_runtime, parse_set.js_context, [&](qjs::Context &ctx)\n+    }\n+    {\n\n-    if(authorized) {\n-        script_safe_runner(parse_set.js_runtime, parse_set.js_context, [&](qjs::Context &ctx)\n-    }\n-    {\n\n+    script_safe_runner(parse_set.js_runtime, parse_set.js_context, [&](qjs::Context &ctx) {\n\n",
    "7": "-    else if(startsWith(rule, \"script:\")) {\n\n+    else if(startsWith(rule, \"script:\") && ext.authorized) {\n\n",
    "8": "-    else if(startsWith(rule, \"script:\") && ext.authorized) {\n\n+    else if(startsWith(rule, \"script:\")) {\n\n"
}