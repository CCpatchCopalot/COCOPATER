{
    "0": "+    assert(buf.size() > 4);\n\n",
    "1": "-        io_->readOrThrow(buf.data(), size);\n\n+        Exiv2::DataBuf url(size+1);\n+        io_->readOrThrow(url.data(), size);\n+        url.write_uint8(size, 0);\n\n-                                            toString(buf.data());\n\n+                                            toString(url.data());\n\n-                                                    toString(buf.data());\n\n+                                                    toString(url.data());\n\n-        io_->readOrThrow(buf.data(), size);\n\n+        Exiv2::DataBuf urn(size+1);\n+        io_->readOrThrow(urn.data(), size);\n+        urn.write_uint8(size, 0);\n\n-                                            toString(buf.data());\n\n+                                            toString(urn.data());\n\n-                                                    toString(buf.data());\n\n+                                                    toString(urn.data());\n\n-        io_->readOrThrow(buf.data(), size);\n-        xmpData_[\"Xmp.video.Compressor\"] = Exiv2::toString(buf.data());\n\n+        Exiv2::DataBuf dcom(size+1);\n+        io_->readOrThrow(dcom.data(), size);\n+        dcom.write_uint8(size, 0);\n+        xmpData_[\"Xmp.video.Compressor\"] = Exiv2::toString(dcom.data());\n\n-        Exiv2::DataBuf url(size+1);\n-        io_->readOrThrow(url.data(), size);\n-        url.write_uint8(size, 0);\n\n+        io_->readOrThrow(buf.data(), size);\n\n-                                            toString(url.data());\n\n+                                            toString(buf.data());\n\n-                                                    toString(url.data());\n\n+                                                    toString(buf.data());\n\n-        Exiv2::DataBuf urn(size+1);\n-        io_->readOrThrow(urn.data(), size);\n-        urn.write_uint8(size, 0);\n\n+        io_->readOrThrow(buf.data(), size);\n\n-                                            toString(urn.data());\n\n+                                            toString(buf.data());\n\n-                                                    toString(urn.data());\n\n+                                                    toString(buf.data());\n\n-        Exiv2::DataBuf dcom(size+1);\n-        io_->readOrThrow(dcom.data(), size);\n-        dcom.write_uint8(size, 0);\n-        xmpData_[\"Xmp.video.Compressor\"] = Exiv2::toString(dcom.data());\n\n+        io_->readOrThrow(buf.data(), size);\n+        xmpData_[\"Xmp.video.Compressor\"] = Exiv2::toString(buf.data());\n\n",
    "2": "-    assert(buf.size() > 4);\n\n",
    "3": "-    tagDecoder(buf, static_cast<size_t>(size - hdrsize));\n\n+    const size_t newsize = static_cast<size_t>(size - hdrsize);\n+    if (newsize > buf.size()) {\n+        buf.resize(newsize);\n+    }\n+    tagDecoder(buf, newsize);\n\n-    const size_t newsize = static_cast<size_t>(size - hdrsize);\n-    if (newsize > buf.size()) {\n-        buf.resize(newsize);\n-    }\n-    tagDecoder(buf, newsize);\n\n+    tagDecoder(buf, static_cast<size_t>(size - hdrsize));\n\n"
}