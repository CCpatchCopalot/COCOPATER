{
    "0": "-    if (hs == NULL)\n\n+    if (hs == NULL) {\n\n-    if (hs == NULL) {\n\n+    if (hs == NULL)\n\n",
    "1": "+    }\n\n",
    "2": "-        if (ret != 0)\n\n+        if (ret != 0) {\n\n",
    "3": "+    }\n\n",
    "4": "-    if (!ssl->options.haveMcast)\n\n+    if (!ssl->options.haveMcast) {\n\n-    if (ssl->options.haveEMS)\n\n+    if (ssl->options.haveEMS) {\n\n-    if (!ssl->options.haveMcast) {\n\n+    if (!ssl->options.haveMcast)\n\n-    if (ssl->options.haveEMS) {\n\n+    if (ssl->options.haveEMS)\n\n",
    "5": "-    else {\n\n+    } else {\n\n-        else\n\n+        } else\n\n-            else\n\n+            } else\n\n-                else\n\n+                } else\n\n-    } else {\n\n+    else {\n\n-        } else\n\n+        else\n\n-            } else\n\n+            else\n\n-                } else\n\n+                else\n\n",
    "6": "-        if (ret != 0)\n\n+        if (ret != 0) {\n\n-        if (ret != 0)\n\n+        if (ret != 0) {\n\n-        if (ret != 0)\n\n+        if (ret != 0) {\n\n-    if (ret == 0)\n\n+    }\n+    if (ret == 0) {\n\n-    if (ret != 0)\n\n+    if (ret != 0) {\n\n-    if (extSz != 0)\n\n+    if (extSz != 0) {\n\n-        if (ret != 0)\n\n+        if (ret != 0) {\n\n-        if (ret != 0) {\n\n+        if (ret != 0)\n\n-        if (ret != 0) {\n\n+        if (ret != 0)\n\n-        if (ret != 0) {\n\n+        if (ret != 0)\n\n-        if (ret != 0) {\n\n+        if (ret != 0)\n\n-    if (ret == 0) {\n\n+    if (ret == 0)\n\n-    }\n-    if (ret == 0) {\n\n+    if (ret == 0)\n\n-    if (ret != 0) {\n\n+    if (ret != 0)\n\n-    if (extSz != 0) {\n\n+    if (extSz != 0)\n\n-        if (ret != 0) {\n\n+        if (ret != 0)\n\n",
    "7": "+        }\n\n",
    "8": "+        }\n\n",
    "9": "+        }\n\n",
    "10": "-        if (ssl->options.dtls && IsDtlsMsgSCRKeys(ssl))\n\n+        if (ssl->options.dtls && IsDtlsMsgSCRKeys(ssl)) {\n\n-        if (ssl->options.dtls && IsDtlsMsgSCRKeys(ssl)) {\n\n+        if (ssl->options.dtls && IsDtlsMsgSCRKeys(ssl))\n\n",
    "11": "-                if (!IsAtLeastTLSv1_3(ssl->version) && ssl->curSize - ssl->keys.padSz -\n-                        (ssl->buffers.inputBuffer.idx - startIdx)\n-                        > MAX_PLATEXT_SZ #ifdef WOLFSSL_ASYNC_CRYPT && ssl->buffers.inputBuffer.length !=\n-                        ssl->buffers.inputBuffer.idx\n\n+                if (!IsAtLeastTLSv1_3(ssl->version) && ssl->curSize - ssl->keys.padSz - (ssl->buffers.inputBuffer.idx - startIdx)\n+                        > MAX_PLATEXT_SZ #ifdef WOLFSSL_ASYNC_CRYPT && ssl->buffers.inputBuffer.length != ssl->buffers.inputBuffer.idx\n\n-            if (ssl->buffers.inputBuffer.idx >= ssl->buffers.inputBuffer.length\n-#ifdef WOLFSSL_DTLS\n-                    || (ssl->options.dtls && ssl->curRL.type == application_data)\n\n+            if (ssl->buffers.inputBuffer.idx >= ssl->buffers.inputBuffer.length #ifdef WOLFSSL_DTLS || (ssl->options.dtls && ssl->curRL.type == application_data)\n\n-                if (!IsAtLeastTLSv1_3(ssl->version) && ssl->curSize - ssl->keys.padSz - (ssl->buffers.inputBuffer.idx - startIdx)\n-                        > MAX_PLATEXT_SZ #ifdef WOLFSSL_ASYNC_CRYPT && ssl->buffers.inputBuffer.length != ssl->buffers.inputBuffer.idx\n\n+                if (!IsAtLeastTLSv1_3(ssl->version) && ssl->curSize - ssl->keys.padSz -\n+                        (ssl->buffers.inputBuffer.idx - startIdx)\n+                        > MAX_PLATEXT_SZ #ifdef WOLFSSL_ASYNC_CRYPT && ssl->buffers.inputBuffer.length !=\n+                        ssl->buffers.inputBuffer.idx\n\n-            if (ssl->buffers.inputBuffer.idx >= ssl->buffers.inputBuffer.length #ifdef WOLFSSL_DTLS || (ssl->options.dtls && ssl->curRL.type == application_data)\n\n+            if (ssl->buffers.inputBuffer.idx >= ssl->buffers.inputBuffer.length\n+#ifdef WOLFSSL_DTLS\n+                    || (ssl->options.dtls && ssl->curRL.type == application_data)\n\n",
    "12": "-    if (ret == 0)\n\n+    if (ret == 0) {\n\n",
    "13": "+    }\n\n",
    "14": "-    if (dgstSz <= 0)\n\n+    if (dgstSz <= 0) {\n\n-    if (dgstSz <= 0) {\n\n+    if (dgstSz <= 0)\n\n",
    "15": "+    }\n\n",
    "16": "-            if (CmpEccStrength(hashAlgo, ssl->buffers.keySz) != 0)\n\n+            if (CmpEccStrength(hashAlgo, ssl->buffers.keySz) != 0) {\n\n-            if (CmpEccStrength(hashAlgo, ssl->buffers.keySz) != 0) {\n\n+            if (CmpEccStrength(hashAlgo, ssl->buffers.keySz) != 0)\n\n",
    "17": "+            }\n\n",
    "18": "-            if (cmp < 0)\n\n+            if (cmp < 0) {\n\n-            if (cmp > 0)\n\n+            if (cmp > 0) {\n\n-            if (cmp < 0) {\n\n+            if (cmp < 0)\n\n-            if (cmp > 0) {\n\n+            if (cmp > 0)\n\n",
    "19": "+            }\n\n",
    "20": "+            }\n\n",
    "21": "-            if (hashAlgo < ssl->suites->hashAlgo)\n\n+            if (hashAlgo < ssl->suites->hashAlgo) {\n\n-            if (ret == 0 && hashAlgo > ssl->suites->hashAlgo)\n\n+            if (ret == 0 && hashAlgo > ssl->suites->hashAlgo) {\n\n-            if (hashAlgo < ssl->suites->hashAlgo) {\n\n+            if (hashAlgo < ssl->suites->hashAlgo)\n\n-            if (ret == 0 && hashAlgo > ssl->suites->hashAlgo) {\n\n+            if (ret == 0 && hashAlgo > ssl->suites->hashAlgo)\n\n",
    "22": "+            }\n\n",
    "23": "+            }\n\n",
    "24": "-        if (cipher_names[i].flags & WOLFSSL_CIPHER_SUITE_FLAG_NAMEALIAS)\n\n+        if (cipher_names[i].flags & WOLFSSL_CIPHER_SUITE_FLAG_NAMEALIAS) {\n\n-        if (cipher_names[i].flags & WOLFSSL_CIPHER_SUITE_FLAG_NAMEALIAS) {\n\n+        if (cipher_names[i].flags & WOLFSSL_CIPHER_SUITE_FLAG_NAMEALIAS)\n\n",
    "25": "+        }\n\n",
    "26": "-            if (info->ssl->options.cipherSuite0 == ECC_BYTE)\n\n+            if (info->ssl->options.cipherSuite0 == ECC_BYTE) {\n\n-            if (info->ssl->options.cipherSuite0 == ECC_BYTE) {\n\n+            if (info->ssl->options.cipherSuite0 == ECC_BYTE)\n\n",
    "27": "+            }\n\n",
    "28": "-    if (info->ssl->error <= M_PARAM_ERR && info->ssl->error >= MAX_PARAM_ERR)\n\n+    if (info->ssl->error <= M_PARAM_ERR && info->ssl->error >= MAX_PARAM_ERR) {\n\n-    if (info->ssl->error <= M_PARAM_ERR && info->ssl->error >= MAX_PARAM_ERR) {\n\n+    if (info->ssl->error <= M_PARAM_ERR && info->ssl->error >= MAX_PARAM_ERR)\n\n",
    "29": "+}\n\n",
    "30": "-        if (info->packets[info->numberPackets - 1].bufferValue)\n\n+        if (info->packets[info->numberPackets - 1].bufferValue) {\n\n-        if (info->packets[info->numberPackets - 1].bufferValue) {\n\n+        if (info->packets[info->numberPackets - 1].bufferValue)\n\n",
    "31": "-        else XMEMCPY(info->packets[info->numberPackets - 1].value, rl, RECORD_HEADER_SZ);\n\n+        } else {\n+            XMEMCPY(info->packets[info->numberPackets - 1].value, rl, RECORD_HEADER_SZ);\n+        }\n\n-        } else {\n-            XMEMCPY(info->packets[info->numberPackets - 1].value, rl, RECORD_HEADER_SZ);\n-        }\n\n+        else XMEMCPY(info->packets[info->numberPackets - 1].value, rl, RECORD_HEADER_SZ);\n\n",
    "32": "-    if (IsAtLeastTLSv1_3(ssl->version))\n\n+    if (IsAtLeastTLSv1_3(ssl->version)) {\n\n-    if (IsAtLeastTLSv1_3(ssl->version)) {\n\n+    if (IsAtLeastTLSv1_3(ssl->version))\n\n-        if (ticket == NULL) {\n-            return MEMORY_E;\n-        }\n\n+        if (ticket == NULL) return MEMORY_E;\n\n",
    "33": "+    }\n\n",
    "34": "-        if (ticket == NULL) return MEMORY_E;\n\n+        if (ticket == NULL) {\n+            return MEMORY_E;\n+        }\n\n",
    "35": "-    if ((ret = TLSX_PopulateExtensions(ssl, 0)) != 0)\n\n+    if ((ret = TLSX_PopulateExtensions(ssl, 0)) != 0) {\n\n-    if ((ret = TLSX_PopulateExtensions(ssl, 0)) != 0) {\n\n+    if ((ret = TLSX_PopulateExtensions(ssl, 0)) != 0)\n\n",
    "36": "+    }\n\n",
    "37": "+    }\n\n",
    "38": "-    if (IsAtLeastTLSv1_2(ssl) && ssl->suites->hashSigAlgoSz)\n\n+    if (IsAtLeastTLSv1_2(ssl) && ssl->suites->hashSigAlgoSz) {\n\n-    if (IsAtLeastTLSv1_2(ssl) && ssl->suites->hashSigAlgoSz) {\n\n+    if (IsAtLeastTLSv1_2(ssl) && ssl->suites->hashSigAlgoSz)\n\n",
    "39": "+    }\n\n",
    "40": "+    }\n\n",
    "41": "+    }\n\n",
    "42": "-        if (ssl->arrays->cookieSz != 0) length += ssl->arrays->cookieSz;\n\n+        if (ssl->arrays->cookieSz != 0) {\n+            length += ssl->arrays->cookieSz;\n+        }\n\n-        if (ssl->arrays->cookieSz != 0) {\n-            length += ssl->arrays->cookieSz;\n-        }\n\n+        if (ssl->arrays->cookieSz != 0) length += ssl->arrays->cookieSz;\n\n",
    "43": "-    if (IsEncryptionOn(ssl, 1))\n\n+    if (IsEncryptionOn(ssl, 1)) {\n\n-    if (IsEncryptionOn(ssl, 1)) {\n\n+    if (IsEncryptionOn(ssl, 1))\n\n",
    "44": "+    }\n\n",
    "45": "-            if (!ssl->specs.static_ecdh #ifdef WOLFSSL_ASYNC_CRYPT && ret != WC_PENDG_E\n-#endif\n-                    && !ssl->options.keepResources) {\n\n+            if (!ssl->specs.static_ecdh #ifdef WOLFSSL_ASYNC_CRYPT && ret != WC_PENDG_E #endif && !ssl->options.keepResources) {\n\n-            if (!ssl->specs.static_ecdh #ifdef WOLFSSL_ASYNC_CRYPT && ret != WC_PENDG_E #endif && !ssl->options.keepResources) {\n\n+            if (!ssl->specs.static_ecdh #ifdef WOLFSSL_ASYNC_CRYPT && ret != WC_PENDG_E\n+#endif\n+                    && !ssl->options.keepResources) {\n\n",
    "46": "+#ifdef WOLFSSL_CHECK_SIG_FAULTS\n+        {\n+            ecc_key* key = (ecc_key*)ssl->hsKey;\n+            ret = EccVerify(ssl, ssl->buffers.sig.buffer, ssl->buffers.sig.length, ssl->buffers.digest.buffer, ssl->buffers.digest.length, key,\n+#ifdef HAVE_PK_CALLBACKS\n+                            ssl->buffers.key\n+#else\n+                            NULL\n+#endif\n+                           );\n+            if (ret != 0) {\n+                WOLFSSL_MSG(\"Failed to verify ECC signature\");\n+                goto exit_scv;\n+            }\n+        }\n+#if defined(HAVE_CURVE25519) || defined(HAVE_CURVE448)\n+        FALL_THROUGH;\n+#endif\n+#endif\n\n",
    "47": "-            if (args->input == NULL)\n\n+            if (args->input == NULL) {\n\n-            if (args->input == NULL) {\n\n+            if (args->input == NULL)\n\n",
    "48": "+            }\n\n",
    "49": "-            if (ssl->ecdhCurveOID == ECC_X25519_OID)\n\n+            if (ssl->ecdhCurveOID == ECC_X25519_OID) {\n\n-                if (ssl->ecdhCurveOID == ECC_X448_OID)\n\n+                if (ssl->ecdhCurveOID == ECC_X448_OID) {\n\n-            if (ssl->ecdhCurveOID == ECC_X25519_OID) {\n\n+            if (ssl->ecdhCurveOID == ECC_X25519_OID)\n\n-                if (ssl->ecdhCurveOID == ECC_X448_OID) {\n\n+                if (ssl->ecdhCurveOID == ECC_X448_OID)\n\n",
    "50": "+#ifdef WOLFSSL_CHECK_SIG_FAULTS\n+            {\n+                ecc_key* key = (ecc_key*)ssl->hsKey;\n+                ret = EccVerify(ssl, args->output + LENGTH_SZ + args->idx, args->sigSz, ssl->buffers.digest.buffer, ssl->buffers.digest.length, key,\n+#ifdef HAVE_PK_CALLBACKS\n+                                ssl->buffers.key\n+#else\n+                                NULL\n+#endif\n+                               );\n+                if (ret != 0) {\n+                    WOLFSSL_MSG( \"Failed to verify ECC signature\");\n+                    goto exit_sske;\n+                }\n+            }\n+#if defined(HAVE_CURVE25519) || defined(HAVE_CURVE44\n+            FALL_THROUGH;\n+#endif\n+#endif\n\n",
    "51": "+        }\n\n",
    "52": "-    if (ssl->ctx->ticketEncCb == NULL #if defined(OPENSSL_EXTRA) || defined(HAVE_WEBSERVER) || defined(WOLFSSL_WPAS_SMALL) ||\n-                (!IsAtLeastTLSv1_3(ssl->version) && (ssl->options.mask & WOLFSSL_OP_NO_TICKET) != 0)\n\n+    if (ssl->ctx->ticketEncCb == NULL #if defined(OPENSSL_EXTRA) || defined(HAVE_WEBSERVER) || defined(WOLFSSL_WPAS_SMALL) || (!IsAtLeastTLSv1_3(ssl->version)\n+                && (ssl->options.mask & WOLFSSL_OP_NO_TICKET) != 0)\n\n-    if (ssl->ctx->ticketEncCb == NULL #if defined(OPENSSL_EXTRA) || defined(HAVE_WEBSERVER) || defined(WOLFSSL_WPAS_SMALL) ||\n-                (!IsAtLeastTLSv1_3(ssl->version) && (ssl->options.mask & WOLFSSL_OP_NO_TICKET) != 0)\n\n+    if (ssl->ctx->ticketEncCb == NULL #if defined(OPENSSL_EXTRA) || defined(HAVE_WEBSERVER) || defined(WOLFSSL_WPAS_SMALL) || (!IsAtLeastTLSv1_3(ssl->version)\n+                && (ssl->options.mask & WOLFSSL_OP_NO_TICKET) != 0)\n\n-    if (ssl->ctx->ticketEncCb == NULL #if defined(OPENSSL_EXTRA) || defined(HAVE_WEBSERVER) || defined(WOLFSSL_WPAS_SMALL) || (!IsAtLeastTLSv1_3(ssl->version)\n-                && (ssl->options.mask & WOLFSSL_OP_NO_TICKET) != 0)\n\n+    if (ssl->ctx->ticketEncCb == NULL #if defined(OPENSSL_EXTRA) || defined(HAVE_WEBSERVER) || defined(WOLFSSL_WPAS_SMALL) ||\n+                (!IsAtLeastTLSv1_3(ssl->version) && (ssl->options.mask & WOLFSSL_OP_NO_TICKET) != 0)\n\n-    if (ssl->ctx->ticketEncCb == NULL #if defined(OPENSSL_EXTRA) || defined(HAVE_WEBSERVER) || defined(WOLFSSL_WPAS_SMALL) || (!IsAtLeastTLSv1_3(ssl->version)\n-                && (ssl->options.mask & WOLFSSL_OP_NO_TICKET) != 0)\n\n+    if (ssl->ctx->ticketEncCb == NULL #if defined(OPENSSL_EXTRA) || defined(HAVE_WEBSERVER) || defined(WOLFSSL_WPAS_SMALL) ||\n+                (!IsAtLeastTLSv1_3(ssl->version) && (ssl->options.mask & WOLFSSL_OP_NO_TICKET) != 0)\n\n",
    "53": "-    }\n\n-    }\n\n-        }\n\n-        }\n\n-        }\n\n-    }\n\n-    }\n\n-            }\n\n-            }\n\n-            }\n\n-            }\n\n-            }\n\n-        }\n\n-            }\n\n-}\n\n-    }\n\n-    }\n\n-    }\n\n-    }\n\n-    }\n\n-    }\n\n-    }\n\n-            }\n\n-        }\n\n",
    "54": "-#ifdef WOLFSSL_CHECK_SIG_FAULTS\n-        {\n-            ecc_key* key = (ecc_key*)ssl->hsKey;\n-            ret = EccVerify(ssl, ssl->buffers.sig.buffer, ssl->buffers.sig.length, ssl->buffers.digest.buffer, ssl->buffers.digest.length, key,\n-#ifdef HAVE_PK_CALLBACKS\n-                            ssl->buffers.key\n-#else\n-                            NULL\n-#endif\n-                           );\n-            if (ret != 0) {\n-                WOLFSSL_MSG(\"Failed to verify ECC signature\");\n-                goto exit_scv;\n-            }\n-        }\n-#if defined(HAVE_CURVE25519) || defined(HAVE_CURVE448)\n-        FALL_THROUGH;\n-#endif\n-#endif\n\n-#ifdef WOLFSSL_CHECK_SIG_FAULTS\n-            {\n-                ecc_key* key = (ecc_key*)ssl->hsKey;\n-                ret = EccVerify(ssl, args->output + LENGTH_SZ + args->idx, args->sigSz, ssl->buffers.digest.buffer, ssl->buffers.digest.length, key,\n-#ifdef HAVE_PK_CALLBACKS\n-                                ssl->buffers.key\n-#else\n-                                NULL\n-#endif\n-                               );\n-                if (ret != 0) {\n-                    WOLFSSL_MSG( \"Failed to verify ECC signature\");\n-                    goto exit_sske;\n-                }\n-            }\n-#if defined(HAVE_CURVE25519) || defined(HAVE_CURVE44\n-            FALL_THROUGH;\n-#endif\n-#endif\n\n"
}