{
    "0": "-static void subject_from_buf(cmark_mem *mem, subject *e, cmark_strbuf *buffer, cmark_reference_map *refmap) {\n\n+static void subject_from_buf(cmark_mem *mem, subject *e, cmark_chunk *chunk, cmark_reference_map *refmap) {\n\n",
    "1": "-    e->input.data = buffer->ptr;\n-    e->input.len = buffer->size;\n-    e->input.alloc = 0;\n\n+    e->input = *chunk;\n\n-static void subject_from_buf(cmark_mem *mem, subject *e, cmark_chunk *chunk, cmark_reference_map *refmap) {\n\n+static void subject_from_buf(cmark_mem *mem, subject *e, cmark_strbuf *buffer, cmark_reference_map *refmap) {\n\n-    e->input = *chunk;\n\n+    e->input.data = buffer->ptr;\n+    e->input.len = buffer->size;\n+    e->input.alloc = 0;\n\n",
    "2": "-    subject_from_buf(mem, &subj, &parent->content, refmap);\n\n+    cmark_chunk content = {parent->content.ptr, parent->content.size, 0};\n+    subject_from_buf(mem, &subj, &content, refmap);\n\n-    cmark_chunk content = {parent->content.ptr, parent->content.size, 0};\n-    subject_from_buf(mem, &subj, &content, refmap);\n\n+    subject_from_buf(mem, &subj, &parent->content, refmap);\n\n",
    "3": "-    case CMARK_NODE_PARAGRAPH:\n-        while (cmark_strbuf_at(node_content, 0) == '[' && (pos = cmark_parse_reference_inline(parser->mem, node_content, parser->refmap))) {\n-            cmark_strbuf_drop(node_content, pos);\n\n+    case CMARK_NODE_PARAGRAPH: {\n+        cmark_chunk chunk = {node_content->ptr, node_content->size, 0};\n+        while (chunk.len && chunk.data[0] == '[' && (pos = cmark_parse_reference_inline(parser->mem, &chunk, parser->refmap))) {\n+            chunk.data += pos;\n+            chunk.len -= pos;\n\n-    case CMARK_NODE_PARAGRAPH: {\n-        cmark_chunk chunk = {node_content->ptr, node_content->size, 0};\n-        while (chunk.len && chunk.data[0] == '[' && (pos = cmark_parse_reference_inline(parser->mem, &chunk, parser->refmap))) {\n-            chunk.data += pos;\n-            chunk.len -= pos;\n\n+    case CMARK_NODE_PARAGRAPH:\n+        while (cmark_strbuf_at(node_content, 0) == '[' && (pos = cmark_parse_reference_inline(parser->mem, node_content, parser->refmap))) {\n+            cmark_strbuf_drop(node_content, pos);\n\n-        cmark_strbuf_drop(node_content, (node_content->size - chunk.len));\n\n",
    "4": "+        cmark_strbuf_drop(node_content, (node_content->size - chunk.len));\n\n",
    "5": "+    }\n\n",
    "6": "-    }\n\n"
}