{
    "0": "-    return (ddi_parse(ifname, drv, &ppa) == DDI_SUCCESS && rdsv3_if_lookup_by_name(drv));\n\n+    return ( ddi_parse_dlen(ifname, drv, MAXLKNAMELEN, &ppa) == DDI_SUCCESS && rdsv3_if_lookup_by_name(drv));\n\n",
    "1": "-    return ( ddi_parse_dlen(ifname, drv, MAXLKNAMELEN, &ppa) == DDI_SUCCESS && rdsv3_if_lookup_by_name(drv));\n\n+    return (ddi_parse(ifname, drv, &ppa) == DDI_SUCCESS && rdsv3_if_lookup_by_name(drv));\n\n-    return ( ddi_parse_dlen(ifname, drv, MAXLKNAMELEN, &ppa) == DDI_SUCCESS && rdsv3_if_lookup_by_name(drv));\n\n+    return (ddi_parse(ifname, drv, &ppa) == DDI_SUCCESS && rdsv3_if_lookup_by_name(drv));\n\n",
    "2": "-    return (ddi_parse(ifname, drv, &ppa) == DDI_SUCCESS && rds_transport_ops->rds_transport_if_lookup_by_name(drv));\n\n+    return ( ddi_parse_dlen(ifname, drv, MAXLKNAMELEN, &ppa) == DDI_SUCCESS && rds_transport_ops->rds_transport_if_lookup_by_name(drv));\n\n",
    "3": "-    return ( ddi_parse_dlen(ifname, drv, MAXLKNAMELEN, &ppa) == DDI_SUCCESS && rds_transport_ops->rds_transport_if_lookup_by_name(drv));\n\n+    return (ddi_parse(ifname, drv, &ppa) == DDI_SUCCESS && rds_transport_ops->rds_transport_if_lookup_by_name(drv));\n\n",
    "4": "-    return (ddi_parse(ifname, drv, &ppa) == DDI_SUCCESS && rdsv3_if_lookup_by_name(drv));\n\n+    return ( ddi_parse_dlen(ifname, drv, MAXLKNAMELEN, &ppa) == DDI_SUCCESS && rdsv3_if_lookup_by_name(drv));\n\n",
    "5": "-    if (ddi_parse(softmac->smac_devname, drv, &ppa) != DDI_SUCCESS) {\n\n+    if (ddi_parse_dlen(softmac->smac_devname, drv, MAXLKNAMELEN, &ppa) != DDI_SUCCESS) {\n\n",
    "6": "-    if (ddi_parse_dlen(softmac->smac_devname, drv, MAXLKNAMELEN, &ppa) != DDI_SUCCESS) {\n\n+    if (ddi_parse(softmac->smac_devname, drv, &ppa) != DDI_SUCCESS) {\n\n",
    "7": "+    return (ddi_parse_dlen(ifname, alnum, LIFNAMSIZ, nump));\n+}\n+int ddi_parse_dlen(const char *ifname, char *alnum, size_t alnumsize, uint_t *nump) {\n\n",
    "8": "-    int\tl;\n\n+    int\tcopy_len;\n\n",
    "9": "-    l = strlen(ifname);\n-    for (p = ifname + l; p != ifname; l--) {\n\n+    copy_len = strlen(ifname);\n+    for (p = ifname + copy_len; p != ifname; copy_len--) {\n\n-            (void) strlcpy(alnum, ifname, l + 1);\n\n+            int copy_len_nul = copy_len + 1;\n+            if (nonum || alnumsize < copy_len_nul) {\n+                return (DDI_FAILURE);\n+            }\n+            (void) strlcpy(alnum, ifname, copy_len_nul);\n\n-    if (l == 0 || nonum) {\n\n+    if (copy_len == 0) {\n\n",
    "10": "-    if (ddi_parse(link, drv, &ppa) != DDI_SUCCESS) {\n\n+    if (ddi_parse_dlen(link, drv, MAXLKNAMELEN, &ppa) != DDI_SUCCESS) {\n\n",
    "11": "-    if (ddi_parse_dlen(link, drv, MAXLKNAMELEN, &ppa) != DDI_SUCCESS) {\n\n+    if (ddi_parse(link, drv, &ppa) != DDI_SUCCESS) {\n\n"
}