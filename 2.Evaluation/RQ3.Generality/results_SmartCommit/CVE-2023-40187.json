{
    "0": "-            BYTE* tmp1;\n-            BYTE* tmp2;\n\n+            if (piDstSize[x] == 0) {\n+                return FALSE;\n+            }\n\n-            tmp1 = winpr_aligned_recalloc(ppYUVDstData[x], piDstSize[x], 1, 16);\n-            if (tmp1) {\n\n+            BYTE* tmp1 = winpr_aligned_recalloc(ppYUVDstData[x], piDstSize[x], 1, 16);\n+            if (!tmp1) {\n+                return FALSE;\n+            }\n\n-            if (piDstSize[x] == 0) {\n-                return FALSE;\n-            }\n\n+            BYTE* tmp1;\n+            BYTE* tmp2;\n\n-            BYTE* tmp1 = winpr_aligned_recalloc(ppYUVDstData[x], piDstSize[x], 1, 16);\n-            if (!tmp1) {\n-                return FALSE;\n-            }\n\n+            tmp1 = winpr_aligned_recalloc(ppYUVDstData[x], piDstSize[x], 1, 16);\n+            if (tmp1) {\n\n-            BYTE* tmp2 = winpr_aligned_recalloc(ppOldYUVDstData[x], piDstSize[x], 1, 16);\n-            if (!tmp2) {\n-                return FALSE;\n\n+            tmp2 = winpr_aligned_recalloc(ppOldYUVDstData[x], piDstSize[x], 1, 16);\n+            if (tmp2) {\n\n+            if (!tmp1 || !tmp2) {\n+                goto fail;\n+            }\n+        }\n\n",
    "1": "+            BYTE* tmp2 = winpr_aligned_recalloc(ppOldYUVDstData[x], piDstSize[x], 1, 16);\n+            if (!tmp2) {\n+                return FALSE;\n\n",
    "2": "-            tmp2 = winpr_aligned_recalloc(ppOldYUVDstData[x], piDstSize[x], 1, 16);\n-            if (tmp2) {\n\n",
    "3": "-            if (!tmp1 || !tmp2) {\n-                goto fail;\n-            }\n-        }\n\n",
    "4": "-    size_t x;\n\n",
    "5": "-    for (x = 0; x < 3; x++) {\n\n+    for (size_t x = 0; x < 3; x++) {\n\n-        for (x = 0; x < 3; x++) {\n\n+        for (size_t x = 0; x < 3; x++) {\n\n-    for (size_t x = 0; x < 3; x++) {\n\n+    for (x = 0; x < 3; x++) {\n\n-    if (pheight == 0) {\n-        return FALSE;\n-    }\n-    if (stride == 0) {\n-        return FALSE;\n-    }\n\n-        for (size_t x = 0; x < 3; x++) {\n\n+        for (x = 0; x < 3; x++) {\n\n",
    "6": "+    if (pheight == 0) {\n+        return FALSE;\n+    }\n+    if (stride == 0) {\n+        return FALSE;\n+    }\n\n",
    "7": "+    size_t x;\n\n"
}