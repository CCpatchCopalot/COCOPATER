{
    "0": "+        if (is_valid_name(data->id->username)) {\n\n",
    "1": "+    }\n\n",
    "2": "-        return(tac_strdup(data->id->NAS_name));\n\n+        if (is_valid_name(data->id->NAS_name)) {\n+            return(tac_strdup(data->id->username));\n+        }\n\n-        if (is_valid_name(data->id->username)) {\n\n-        if (is_valid_name(data->id->NAS_name)) {\n-            return(tac_strdup(data->id->username));\n-        }\n\n+        return(tac_strdup(data->id->NAS_name));\n\n",
    "3": "+        if (is_valid_name(data->id->NAC_address)) {\n\n",
    "4": "+    }\n\n",
    "5": "+static int is_valid_name(const char *name) {\n+    size_t len = strlen(name);\n+    if (len > 100) {\n+        report(LOG_DEBUG, \"field %s is longer than allowed length 100\", name);\n+        return 0;\n+    }\n+    for (size_t i = 0; i < len; i++) {\n+        char c = name[i];\n+        if (!isalnum(c) && c != '_' && c != '.' && c != ':') {\n+            report(LOG_DEBUG, \"invalid character '%c' inside field [%s]\", c, name);\n+            return 0;\n+        }\n+    }\n+    return 1;\n+}\n\n",
    "6": "-    }\n\n-    }\n\n",
    "7": "-        if (is_valid_name(data->id->NAC_address)) {\n\n"
}