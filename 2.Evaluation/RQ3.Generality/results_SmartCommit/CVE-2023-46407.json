{
    "0": "-    VLC level1_vlc;\n\n+    VLC level1_vlc = { 0 };\n\n",
    "1": "-        return AVERROR_VALIDDATA;\n\n+        ret = AVERROR_VALIDDATA;\n+        goto end;\n\n-        ret = AVERROR_VALIDDATA;\n-        goto end;\n\n+        return AVERROR_VALIDDATA;\n\n",
    "2": "-    buf = av_mallocz(dist->alphabet_size * (2 * sizeof(int8_t) + sizeof(int16_t) + sizeof(uint32_t))\n\n+    buf = av_mallocz(MAX_PREFIX_ALPHABET_SIZE * (2 * sizeof(int8_t) + sizeof(int16_t) + sizeof(uint32_t))\n\n-    level2_lens_s = (int8_t *)(buf + dist->alphabet_size * sizeof(int8_t));\n-    level2_syms = (int16_t *)(buf + dist->alphabet_size * (2 * sizeof(int8_t)));\n-    level2_codecounts = (uint32_t *)(buf + dist->alphabet_size * (2 * sizeof(int8_t) + sizeof(int16_t)));\n\n+    level2_lens_s = (int8_t *)(buf + MAX_PREFIX_ALPHABET_SIZE * sizeof(int8_t));\n+    level2_syms = (int16_t *)(buf + MAX_PREFIX_ALPHABET_SIZE * (2 * sizeof(int8_t)));\n+    level2_codecounts = (uint32_t *)(buf + MAX_PREFIX_ALPHABET_SIZE * (2 * sizeof(int8_t) + sizeof(int16_t)));\n\n-    buf = av_mallocz(MAX_PREFIX_ALPHABET_SIZE * (2 * sizeof(int8_t) + sizeof(int16_t) + sizeof(uint32_t))\n\n+    buf = av_mallocz(dist->alphabet_size * (2 * sizeof(int8_t) + sizeof(int16_t) + sizeof(uint32_t))\n\n-    level2_lens_s = (int8_t *)(buf + MAX_PREFIX_ALPHABET_SIZE * sizeof(int8_t));\n-    level2_syms = (int16_t *)(buf + MAX_PREFIX_ALPHABET_SIZE * (2 * sizeof(int8_t)));\n-    level2_codecounts = (uint32_t *)(buf + MAX_PREFIX_ALPHABET_SIZE * (2 * sizeof(int8_t) + sizeof(int16_t)));\n\n+    level2_lens_s = (int8_t *)(buf + dist->alphabet_size * sizeof(int8_t));\n+    level2_syms = (int16_t *)(buf + dist->alphabet_size * (2 * sizeof(int8_t)));\n+    level2_codecounts = (uint32_t *)(buf + dist->alphabet_size * (2 * sizeof(int8_t) + sizeof(int16_t)));\n\n",
    "3": "+        if (get_bits_left(gb) < 0) {\n+            ret = AVERROR_BUFFER_TOO_SMALL;\n+            goto end;\n+        }\n\n",
    "4": "-                extra = 4 * (repeat_count_prev - 2) - repeat_count_prev + extra;\n-            }\n-            if (i + extra > dist->alphabet_size) {\n-                ret = AVERROR_VALIDDATA;\n-                goto end;\n\n+                extra += 4 * (repeat_count_prev - 2) - repeat_count_prev;\n\n-                extra = 8 * (repeat_count_zero - 2) - repeat_count_zero + extra;\n\n+                extra += 8 * (repeat_count_zero - 2) - repeat_count_zero;\n\n-    VLC level1_vlc = { 0 };\n\n+    VLC level1_vlc;\n\n-        if (get_bits_left(gb) < 0) {\n-            ret = AVERROR_BUFFER_TOO_SMALL;\n-            goto end;\n-        }\n\n-                extra += 4 * (repeat_count_prev - 2) - repeat_count_prev;\n\n+                extra = 4 * (repeat_count_prev - 2) - repeat_count_prev + extra;\n+            }\n+            if (i + extra > dist->alphabet_size) {\n+                ret = AVERROR_VALIDDATA;\n+                goto end;\n\n-            extra = FFM(extra, dist->alphabet_size - i);\n\n-                extra += 8 * (repeat_count_zero - 2) - repeat_count_zero;\n\n+                extra = 8 * (repeat_count_zero - 2) - repeat_count_zero + extra;\n\n-            extra = FFM(extra, dist->alphabet_size - i);\n\n",
    "5": "+            extra = FFM(extra, dist->alphabet_size - i);\n\n",
    "6": "+            extra = FFM(extra, dist->alphabet_size - i);\n\n"
}