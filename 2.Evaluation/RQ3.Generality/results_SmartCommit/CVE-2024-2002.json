{
    "0": "+#if 0\n+    Dwarf_Bool check_errmsg_list = FALSE;\n+#endif\n\n",
    "1": "+#if 0\n+            check_errmsg_list = TRUE;\n+#endif\n\n",
    "2": "+            _dwarf_remove_from_staticerrlist(space);\n\n",
    "3": "-#if 0\n-    Dwarf_Bool check_errmsg_list = FALSE;\n-#endif\n\n",
    "4": "-#if 0\n-            check_errmsg_list = TRUE;\n-#endif\n\n",
    "5": "-            _dwarf_remove_from_staticerrlist(space);\n\n",
    "6": "-        printf(\"libdwarfdetector ALLOC ret 0x%lx type 0x%x \" \"size %lu line %d %s\\n\", (unsigned long)ret_mem,(unsigned)alloc_type, (unsigned long)size,__LE__,__FILE__);\n\n+        printf(\"\\nlibdwarfdetector ALLOC ret 0x%lx type 0x%x \" \"size %lu line %d %s\\n\", (unsigned long)ret_mem,(unsigned)alloc_type, (unsigned long)size,__LE__,__FILE__);\n\n-        printf(\"\\nlibdwarfdetector ALLOC ret 0x%lx type 0x%x \" \"size %lu line %d %s\\n\", (unsigned long)ret_mem,(unsigned)alloc_type, (unsigned long)size,__LE__,__FILE__);\n\n+        printf(\"libdwarfdetector ALLOC ret 0x%lx type 0x%x \" \"size %lu line %d %s\\n\", (unsigned long)ret_mem,(unsigned)alloc_type, (unsigned long)size,__LE__,__FILE__);\n\n",
    "7": "-                printf(\"libdwarf no dbg, fullystatic, \" \"using DE_STATIC alloc, addr\" \" 0x%lx line %d %s\\n\", (unsigned long)errptr, __LE__,__FILE__);\n\n+                printf(\"libdwarf no dbg to dwarf_error_string,\" \" fullystatic, \" \"using DE_STATIC alloc, addr\" \" 0x%lx line %d %s\\n\", (unsigned long)errptr, __LE__,__FILE__);\n\n",
    "8": "-                printf(\"libdwarf no dbg,leaks, \" \"static DE_MALLOC alloc, addr\" \" 0x%lx line %d %s\\n\", (unsigned long)errptr, __LE__,__FILE__);\n\n+                printf(\"libdwarf no dbg, add to static_err_list \" \"static DE_MALLOC alloc, addr\" \" 0x%lx line %d %s\\n\", (unsigned long)errptr, __LE__,__FILE__);\n\n",
    "9": "-                printf(\"libdwarf no dbg to dwarf_error_string,\" \" fullystatic, \" \"using DE_STATIC alloc, addr\" \" 0x%lx line %d %s\\n\", (unsigned long)errptr, __LE__,__FILE__);\n\n+                printf(\"libdwarf no dbg, fullystatic, \" \"using DE_STATIC alloc, addr\" \" 0x%lx line %d %s\\n\", (unsigned long)errptr, __LE__,__FILE__);\n\n-                printf(\"libdwarf no dbg, add to static_err_list \" \"static DE_MALLOC alloc, addr\" \" 0x%lx line %d %s\\n\", (unsigned long)errptr, __LE__,__FILE__);\n\n+                printf(\"libdwarf no dbg,leaks, \" \"static DE_MALLOC alloc, addr\" \" 0x%lx line %d %s\\n\", (unsigned long)errptr, __LE__,__FILE__);\n\n",
    "10": "+    fflush(stdout);\n\n",
    "11": "-    fflush(stdout);\n\n",
    "12": "+#ifdef DEBUG_ALLOC\n+    printf(\"\\nlibdwarfdetector add to static err list \" \" 0x%lx\\n\",(unsigned long)(uintptr_t)error);\n+    fflush(stdout);\n+#endif\n\n",
    "13": "+#ifdef DEBUG_ALLOC\n+        printf(\"libdwarfdetector add to static err list at %u\\n\", i);\n+        fflush(stdout);\n+#endif\n\n",
    "14": "+static void _dwarf_remove_from_staticerrlist(Dwarf_Ptr *space) {\n+    unsigned i = 0;\n+    if (!space) {\n+        return;\n+    }\n+#ifdef DEBUG_ALLOC\n+    printf(\"\\nlibdwarfdetector remove from static err list \" \" 0x%lx\\n\",(unsigned long)(uintptr_t)space);\n+    fflush(stdout);\n+#endif\n+    for ( ; i <static_used; ++i) {\n+        Dwarf_Error e = staticerrlist[i];\n+        if (!e) {\n+            continue;\n+        }\n+        if ((void *)e == space) {\n+#ifdef DEBUG_ALLOC\n+            printf(\"libdwarfdetector rm from static err list at %u\\n\", i);\n+            fflush(stdout);\n+#endif\n+            staticerrlist[i] = 0;\n+            return;\n+        }\n+    }\n+}\n\n",
    "15": "-#ifdef DEBUG_ALLOC\n-    printf(\"\\nlibdwarfdetector add to static err list \" \" 0x%lx\\n\",(unsigned long)(uintptr_t)error);\n-    fflush(stdout);\n-#endif\n\n",
    "16": "-#ifdef DEBUG_ALLOC\n-        printf(\"libdwarfdetector add to static err list at %u\\n\", i);\n-        fflush(stdout);\n-#endif\n\n"
}