{
    "0": "-        perror (\"malloc (ret)\");\n\n",
    "1": "-    image_infos = (struct dyld_cache_image_info*) (bin->b->buf + bin->hdr.startaddr);\n-    dyld_vmbase = *(ut64 *)(bin->b->buf + bin->hdr.baseaddroff);\n\n+    int sz = bin->nlibs * sizeof (struct dyld_cache_image_info);\n+    image_infos = malloc (sz);\n+    if (!image_infos) {\n+        free (ret);\n+        return NULL;\n+    }\n+    r_buf_read_at (bin->b, bin->hdr.startaddr, (ut8*)image_infos, sz);\n+    dyld_vmbase = r_buf_read64le (bin->b, bin->hdr.baseaddroff);\n\n-    if (image_infos[idx].pathFileOffset > bin->size) {\n-        eprintf (\"corrupted file\\n\");\n\n+    int pfo = image_infos[idx].pathFileOffset;\n+    if (pfo < 0 || pfo > bin->size) {\n+        eprintf (\"corrupted file: pathFileOffset > bin->size (%d)\\n\", pfo);\n\n-    libname = (char *)(bin->b->buf + image_infos[idx].pathFileOffset);\n\n+    libname = r_buf_read_string (bin->b, pfo, 64);\n\n-    int sz = bin->nlibs * sizeof (struct dyld_cache_image_info);\n-    image_infos = malloc (sz);\n-    if (!image_infos) {\n-        free (ret);\n-        return NULL;\n-    }\n-    r_buf_read_at (bin->b, bin->hdr.startaddr, (ut8*)image_infos, sz);\n-    dyld_vmbase = r_buf_read64le (bin->b, bin->hdr.baseaddroff);\n\n+    image_infos = (struct dyld_cache_image_info*) (bin->b->buf + bin->hdr.startaddr);\n+    dyld_vmbase = *(ut64 *)(bin->b->buf + bin->hdr.baseaddroff);\n\n-    int pfo = image_infos[idx].pathFileOffset;\n-    if (pfo < 0 || pfo > bin->size) {\n-        eprintf (\"corrupted file: pathFileOffset > bin->size (%d)\\n\", pfo);\n\n+    if (image_infos[idx].pathFileOffset > bin->size) {\n+        eprintf (\"corrupted file\\n\");\n\n-    libname = r_buf_read_string (bin->b, pfo, 64);\n\n+    libname = (char *)(bin->b->buf + image_infos[idx].pathFileOffset);\n\n",
    "2": "+        perror (\"malloc (ret)\");\n\n",
    "3": "-    struct r_bin_dyldcache_obj_t *bin;\n-    if (!(bin = malloc (sizeof (struct r_bin_dyldcache_obj_t)))) {\n\n+    struct r_bin_dyldcache_obj_t *bin = R_NEW0 (struct r_bin_dyldcache_obj_t);\n+    if (!bin) {\n\n-    if (!r_buf_set_bytes (bin->b, buf, size)) {\n\n+    if (!bin->b || !r_buf_set_bytes (bin->b, buf, size)) {\n\n-    struct r_bin_dyldcache_obj_t *bin = R_NEW0 (struct r_bin_dyldcache_obj_t);\n-    if (!bin) {\n\n+    struct r_bin_dyldcache_obj_t *bin;\n+    if (!(bin = malloc (sizeof (struct r_bin_dyldcache_obj_t)))) {\n\n+    memset (bin, 0, sizeof (struct r_bin_dyldcache_obj_t));\n\n-    if (!bin->b || !r_buf_set_bytes (bin->b, buf, size)) {\n\n+    if (!r_buf_set_bytes (bin->b, buf, size)) {\n\n",
    "4": "-    memset (bin, 0, sizeof (struct r_bin_dyldcache_obj_t));\n\n"
}