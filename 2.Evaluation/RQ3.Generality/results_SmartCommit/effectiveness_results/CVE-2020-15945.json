{
    "0": "+    L->oldpc = 0;\n\n",
    "1": "-    L->oldpc = 0;\n\n-        if (npci == 0 || pc <= L->oldpc || changedline(p, pcRel(L->oldpc, p), npci)) {\n\n+        if (npci == 0 || pc <= invpcRel(oldpc, p) || changedline(p, oldpc, npci)) {\n\n-        L->oldpc = pc;\n\n+        L->oldpc = npci;\n\n-    const Proto *p = ci_func(ci)->p;\n\n-    int oldpc = (L->oldpc < p->sizecode) ? L->oldpc : 0;\n\n-        if (npci == 0 || pc <= invpcRel(oldpc, p) || changedline(p, oldpc, npci)) {\n\n+        if (npci == 0 || pc <= L->oldpc || changedline(p, pcRel(L->oldpc, p), npci)) {\n\n-        L->oldpc = npci;\n\n+        L->oldpc = pc;\n\n-                    L->oldpc = 1;\n\n+                    L->oldpc = pc + 1;\n\n-        Proto *p = ci_func(ci)->p;\n\n+        Proto *p = clLvalue(s2v(ci->func))->p;\n\n-    if (isLua(ci = ci->previous)) {\n-        L->oldpc = pcRel(ci->u.l.savedpc, ci_func(ci)->p);\n\n+    if (isLua(ci->previous)) {\n+        L->oldpc = ci->previous->u.l.savedpc;\n\n",
    "2": "+    const Proto *p = ci_func(ci)->p;\n\n",
    "3": "+    int oldpc = (L->oldpc < p->sizecode) ? L->oldpc : 0;\n\n",
    "4": "-        const Proto *p = ci_func(ci)->p;\n\n",
    "5": "+        const Proto *p = ci_func(ci)->p;\n\n",
    "6": "-                    L->oldpc = pc + 1;\n\n+                    L->oldpc = 1;\n\n",
    "7": "-    if (isLua(L->ci)) {\n-        L->oldpc = L->ci->u.l.savedpc;\n-    }\n\n",
    "8": "+    if (isLua(L->ci)) {\n+        L->oldpc = L->ci->u.l.savedpc;\n+    }\n\n",
    "9": "-        Proto *p = clLvalue(s2v(ci->func))->p;\n\n+        Proto *p = ci_func(ci)->p;\n\n",
    "10": "-    if (isLua(ci->previous)) {\n-        L->oldpc = ci->previous->u.l.savedpc;\n\n+    if (isLua(ci = ci->previous)) {\n+        L->oldpc = pcRel(ci->u.l.savedpc, ci_func(ci)->p);\n\n"
}