{
    "0": "-    initialized &= dct_.Initialize(filterbank_channel_count_, dct_coefficient_count_);\n\n+    if (initialized) {\n+        initialized = dct_.Initialize(filterbank_channel_count_, dct_coefficient_count_);\n+    }\n\n",
    "1": "-    if (initialized) {\n-        initialized = dct_.Initialize(filterbank_channel_count_, dct_coefficient_count_);\n-    }\n\n+    initialized &= dct_.Initialize(filterbank_channel_count_, dct_coefficient_count_);\n\n",
    "2": "-    center_frequencies_.resize(num_channels_ + 1);\n\n+    std::size_t center_frequencies_size = std::size_t(num_channels_) + 1;\n+    if (center_frequencies_size >= std::numeric_limits<int>::max() || center_frequencies_size > center_frequencies_.max_size()) {\n+        LOG(ERROR) << \"Number of filterbank channels must be less than \" << std::numeric_limits<int>::max()\n+                   << \" and less than or equal to \" << center_frequencies_.max_size();\n+        return false;\n+    }\n+    center_frequencies_.resize(center_frequencies_size);\n\n",
    "3": "-    std::size_t center_frequencies_size = std::size_t(num_channels_) + 1;\n-    if (center_frequencies_size >= std::numeric_limits<int>::max() || center_frequencies_size > center_frequencies_.max_size()) {\n-        LOG(ERROR) << \"Number of filterbank channels must be less than \" << std::numeric_limits<int>::max()\n-                   << \" and less than or equal to \" << center_frequencies_.max_size();\n-        return false;\n-    }\n-    center_frequencies_.resize(center_frequencies_size);\n\n+    center_frequencies_.resize(num_channels_ + 1);\n\n"
}