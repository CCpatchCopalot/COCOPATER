{
    "0": "-    if (br) {\n\n+    if (br>0) {\n\n",
    "1": "-    if (br>0) {\n\n+    if (br) {\n\n",
    "2": "-                ctts->entries[i].decodingOffset += shift;\n\n+                s64 new_ts = ctts->entries[i].decodingOffset;\n+                new_ts += shift;\n+                ctts->entries[i].decodingOffset = (u32) shift;\n\n-            ctts->entries[i].decodingOffset += shift;\n\n+            s64 new_ts = ctts->entries[i].decodingOffset;\n+            new_ts += shift;\n+            ctts->entries[i].decodingOffset = (u32) shift;\n\n-                s64 new_ts = ctts->entries[i].decodingOffset;\n-                new_ts += shift;\n-                ctts->entries[i].decodingOffset = (u32) shift;\n\n+                ctts->entries[i].decodingOffset += shift;\n\n-            s64 new_ts = ctts->entries[i].decodingOffset;\n-            new_ts += shift;\n-            ctts->entries[i].decodingOffset = (u32) shift;\n\n+            ctts->entries[i].decodingOffset += shift;\n\n",
    "3": "-    for (i=0; i<trak->Media->information->sampleTable->CompositionOffset->nb_entries; i++) {\n-        trak->Media->information->sampleTable->CompositionOffset->entries[i].decodingOffset -= offset_shift;\n\n+    GF_CompositionOffsetBox *ctso = trak->Media->information->sampleTable->CompositionOffset;\n+    for (i=0; i<ctso->nb_entries; i++) {\n+        s64 new_ts = ctso->entries[i].decodingOffset;\n+        new_ts -= offset_shift;\n+        ctso->entries[i].decodingOffset = (s32) new_ts;\n\n-        trak->Media->mediaHeader->duration -= offset_shift;\n\n+        s64 new_dur = trak->Media->mediaHeader->duration;\n+        new_dur -= offset_shift;\n+        if (new_dur<0) {\n+            new_dur = 0;\n+        }\n+        trak->Media->mediaHeader->duration = (u32) new_dur;\n\n-    GF_CompositionOffsetBox *ctso = trak->Media->information->sampleTable->CompositionOffset;\n-    for (i=0; i<ctso->nb_entries; i++) {\n-        s64 new_ts = ctso->entries[i].decodingOffset;\n-        new_ts -= offset_shift;\n-        ctso->entries[i].decodingOffset = (s32) new_ts;\n\n+    for (i=0; i<trak->Media->information->sampleTable->CompositionOffset->nb_entries; i++) {\n+        trak->Media->information->sampleTable->CompositionOffset->entries[i].decodingOffset -= offset_shift;\n\n-        s64 new_dur = trak->Media->mediaHeader->duration;\n-        new_dur -= offset_shift;\n-        if (new_dur<0) {\n-            new_dur = 0;\n-        }\n-        trak->Media->mediaHeader->duration = (u32) new_dur;\n\n+        trak->Media->mediaHeader->duration -= offset_shift;\n\n"
}