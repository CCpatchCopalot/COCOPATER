{
    "0": "+                    if (i > 0 && zlength != crop->combined_length) {\n+                        TIFFError( \"computeInputPixelOffsets\", \"Only equal length regions can be combined for \" \"-E left or right\");\n+                        return (-1);\n+                    }\n\n",
    "1": "+                    if (i > 0 && zwidth != crop->combined_width) {\n+                        TIFFError(\"computeInputPixelOffsets\", \"Only equal width regions can be \" \"combined for -E \" \"top or bottom\");\n+                        return (-1);\n+                    }\n\n",
    "2": "-                    if (i > 0 && zlength != crop->combined_length) {\n-                        TIFFError( \"computeInputPixelOffsets\", \"Only equal length regions can be combined for \" \"-E left or right\");\n-                        return (-1);\n-                    }\n\n",
    "3": "-                    if (i > 0 && zwidth != crop->combined_width) {\n-                        TIFFError(\"computeInputPixelOffsets\", \"Only equal width regions can be \" \"combined for -E \" \"top or bottom\");\n-                        return (-1);\n-                    }\n\n",
    "4": "+    switch (crop->edge_ref) {\n+    default:\n+    case EDGE_TOP:\n+    case EDGE_BOTTOM:\n+        for (i = 1; i < crop->selections; i++) {\n+            uint32_t crop_width0 = crop->regionlist[i - 1].x2 - crop->regionlist[i - 1].x1 + 1;\n+            uint32_t crop_width1 = crop->regionlist[i].x2 - crop->regionlist[i].x1 + 1;\n+            if (crop_width0 != crop_width1) {\n+                TIFFError(\"extractCompositeRegions\", \"Only equal width regions can be combined for -E \" \"top or bottom\");\n+                return (1);\n+            }\n+        }\n+        break;\n+    case EDGE_LEFT:\n+    case EDGE_RIGHT:\n+        for (i = 1; i < crop->selections; i++) {\n+            uint32_t crop_length0 = crop->regionlist[i - 1].y2 - crop->regionlist[i - 1].y1 + 1;\n+            uint32_t crop_length1 = crop->regionlist[i].y2 - crop->regionlist[i].y1 + 1;\n+            if (crop_length0 != crop_length1) {\n+                TIFFError(\"extractCompositeRegions\", \"Only equal length regions can be combined for \" \"-E left or right\");\n+                return (1);\n+            }\n+        }\n+    }\n\n",
    "5": "-            if ((i > 0) && (crop_width != crop->regionlist[i - 1].width)) {\n\n+            if ((crop->selections > i + 1) && (crop_width != crop->regionlist[i + 1].width)) {\n\n-            if ((i > 0) && (crop_length != crop->regionlist[i - 1].length)) {\n\n+            if ((crop->selections > i + 1) && (crop_length != crop->regionlist[i + 1].length)) {\n\n-    switch (crop->edge_ref) {\n-    default:\n-    case EDGE_TOP:\n-    case EDGE_BOTTOM:\n-        for (i = 1; i < crop->selections; i++) {\n-            uint32_t crop_width0 = crop->regionlist[i - 1].x2 - crop->regionlist[i - 1].x1 + 1;\n-            uint32_t crop_width1 = crop->regionlist[i].x2 - crop->regionlist[i].x1 + 1;\n-            if (crop_width0 != crop_width1) {\n-                TIFFError(\"extractCompositeRegions\", \"Only equal width regions can be combined for -E \" \"top or bottom\");\n-                return (1);\n-            }\n-        }\n-        break;\n-    case EDGE_LEFT:\n-    case EDGE_RIGHT:\n-        for (i = 1; i < crop->selections; i++) {\n-            uint32_t crop_length0 = crop->regionlist[i - 1].y2 - crop->regionlist[i - 1].y1 + 1;\n-            uint32_t crop_length1 = crop->regionlist[i].y2 - crop->regionlist[i].y1 + 1;\n-            if (crop_length0 != crop_length1) {\n-                TIFFError(\"extractCompositeRegions\", \"Only equal length regions can be combined for \" \"-E left or right\");\n-                return (1);\n-            }\n-        }\n-    }\n\n-            if ((crop->selections > i + 1) && (crop_width != crop->regionlist[i + 1].width)) {\n\n+            if ((i > 0) && (crop_width != crop->regionlist[i - 1].width)) {\n\n-            if ((crop->selections > i + 1) && (crop_length != crop->regionlist[i + 1].length)) {\n\n+            if ((i > 0) && (crop_length != crop->regionlist[i - 1].length)) {\n\n"
}