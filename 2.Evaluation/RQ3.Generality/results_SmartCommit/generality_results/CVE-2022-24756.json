{
    "0": "-bool PamAuthenticateUser(BareosSocket* UA_sock, const std::string& username_in, const std::string& password_in, std::string& authenticated_username) {\n-    std::unique_ptr<PamData> pam_callback_data(new PamData(UA_sock, password_in));\n-    std::unique_ptr<struct pam_conv> pam_conversation_container( new struct pam_conv);\n-    struct pam_handle* pamh = nullptr;\n-    bool interactive = true;\n-    if (!username_in.empty() && !password_in.empty()) {\n-        interactive = false;\n-    }\n-    pam_conversation_container->conv = interactive ? PamConversationCallback : PamLocalCallback;\n-    pam_conversation_container->appdata_ptr = pam_callback_data.get();\n-    const char* username = username_in.empty() ? nullptr : username_in.c_str();\n-    int err = pam_start(service_name.c_str(), username, pam_conversation_container.get(), &pamh);\n-    if (err != PAM_SUCCESS) {\n-        Dmsg1(debuglevel, \"PAM start failed: %s\\n\", pam_strerror(pamh, err));\n-        return false;\n-    }\n-    err = pam_set_item(pamh, PAM_RUSER, username);\n\n+static int DoPamAuth(struct pam_handle* pamh, const char* username, std::string& authenticated_username) {\n+    int err = pam_set_item(pamh, PAM_RUSER, username);\n\n-            const char* temp_str = static_cast<const char*>(data);\n-            authenticated_username = temp_str;\n\n+            authenticated_username = static_cast<const char*>(data);\n+        }\n+    }\n+    return err;\n+}\n+bool PamAuthenticateUser(BareosSocket* UA_sock, const std::string& username_in, const std::string& password_in, std::string& authenticated_username) {\n+    std::unique_ptr<PamData> pam_callback_data(new PamData(UA_sock, password_in));\n+    std::unique_ptr<struct pam_conv> pam_conversation_container( new struct pam_conv);\n+    struct pam_handle* pamh = nullptr;\n+    bool interactive = true;\n+    if (!username_in.empty() && !password_in.empty()) {\n+        interactive = false;\n\n-    pam_conversation_container->conv = interactive ? PamConversationCallback : PamLocalCallback;\n-    pam_conversation_container->appdata_ptr = pam_callback_data.get();\n-    const char* username = username_in.empty() ? nullptr : username_in.c_str();\n-    int err = pam_start(service_name.c_str(), username, pam_conversation_container.get(), &pamh);\n-    if (err != PAM_SUCCESS) {\n-        Dmsg1(debuglevel, \"PAM start failed: %s\\n\", pam_strerror(pamh, err));\n-        return false;\n\n-    err = DoPamAuth(pamh, username, authenticated_username);\n\n",
    "1": "-        return false;\n\n+        return err;\n\n-        return false;\n\n+        return err;\n\n-        return false;\n\n+        return err;\n\n",
    "2": "+    pam_conversation_container->conv = interactive ? PamConversationCallback : PamLocalCallback;\n+    pam_conversation_container->appdata_ptr = pam_callback_data.get();\n+    const char* username = username_in.empty() ? nullptr : username_in.c_str();\n+    int err = pam_start(service_name.c_str(), username, pam_conversation_container.get(), &pamh);\n+    if (err != PAM_SUCCESS) {\n+        Dmsg1(debuglevel, \"PAM start failed: %s\\n\", pam_strerror(pamh, err));\n+        return false;\n\n",
    "3": "+    err = DoPamAuth(pamh, username, authenticated_username);\n\n"
}