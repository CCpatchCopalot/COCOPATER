{
    "0": "-    Common::BrotliContext ctx(chunk_size_);\n\n+    Common::BrotliContext ctx(chunk_size_, MaxInflateRatio * input_buffer.length());\n\n",
    "1": "-    Common::BrotliContext ctx(chunk_size_, MaxInflateRatio * input_buffer.length());\n\n+    Common::BrotliContext ctx(chunk_size_);\n\n-    uint64_t limit = MaxInflateRatio * input_buffer.length();\n\n-            if (Runtime::runtimeFeatureEnabled( \"envoy.reloadable_features.enable_compression_bomb_protection\") && (output_buffer.length() > limit)) {\n-                stats_.zstd_generic_error_.inc();\n-                ENVOY_LOG(trace, \"excessive decompression ratio detected: output \" \"size {} for input size {}\", output_buffer.length(), input_buffer.length());\n-                return;\n-            }\n\n-    if (Runtime::runtimeFeatureEnabled( \"envoy.reloadable_features.enable_compression_bomb_protection\") && (output_buffer.length() > ctx.max_output_size_)) {\n-        stats_.brotli_error_.inc();\n-        return false;\n-    }\n\n",
    "2": "+    uint64_t limit = MaxInflateRatio * input_buffer.length();\n\n",
    "3": "+            if (Runtime::runtimeFeatureEnabled( \"envoy.reloadable_features.enable_compression_bomb_protection\") && (output_buffer.length() > limit)) {\n+                stats_.zstd_generic_error_.inc();\n+                ENVOY_LOG(trace, \"excessive decompression ratio detected: output \" \"size {} for input size {}\", output_buffer.length(), input_buffer.length());\n+                return;\n+            }\n\n",
    "4": "+    if (Runtime::runtimeFeatureEnabled( \"envoy.reloadable_features.enable_compression_bomb_protection\") && (output_buffer.length() > ctx.max_output_size_)) {\n+        stats_.brotli_error_.inc();\n+        return false;\n+    }\n\n"
}