{
    "0": "-            uint8_t *alignments = get_table_alignments(node->parent->parent);\n-            int i = 0;\n-            cmark_node *n;\n-            for (n = node->parent->first_child; n; n = n->next, ++i)\n-                if (n == node) {\n-                    break;\n-                }\n-            switch (alignments[i]) {\n\n+            switch (get_cell_alignment(node)) {\n\n-            switch (get_cell_alignment(node)) {\n\n+            uint8_t *alignments = get_table_alignments(node->parent->parent);\n+            int i = 0;\n+            cmark_node *n;\n+            for (n = node->parent->first_child; n; n = n->next, ++i)\n+                if (n == node) {\n+                    break;\n+                }\n+            switch (alignments[i]) {\n\n-            int i = 0;\n-            for (n = node->parent->first_child; n; n = n->next, ++i)\n-                if (n == node) {\n-                    break;\n-                }\n-            switch (alignments[i]) {\n\n+            switch (get_cell_alignment(node)) {\n\n-            switch (get_cell_alignment(node)) {\n\n+            int i = 0;\n+            for (n = node->parent->first_child; n; n = n->next, ++i)\n+                if (n == node) {\n+                    break;\n+                }\n+            switch (alignments[i]) {\n\n",
    "1": "-    {\n\n",
    "2": "+        set_cell_index(header_cell, i);\n\n",
    "3": "-    }\n\n+    incr_table_row_count(parent_container, i);\n\n-    incr_table_row_count(parent_container, i);\n\n+    }\n\n-    if (get_n_autocompleted_cells(parent_container) > MAX_AUTOCOMPLETED_CELLS) {\n-        return NULL;\n-    }\n\n-            set_cell_index(node, i);\n\n-        incr_table_row_count(parent_container, i);\n\n-            set_cell_index(node, i);\n\n",
    "4": "+    {\n\n",
    "5": "-        set_cell_index(header_cell, i);\n\n",
    "6": "+    if (get_n_autocompleted_cells(parent_container) > MAX_AUTOCOMPLETED_CELLS) {\n+        return NULL;\n+    }\n\n",
    "7": "+            set_cell_index(node, i);\n\n",
    "8": "+        incr_table_row_count(parent_container, i);\n\n",
    "9": "+            set_cell_index(node, i);\n\n",
    "10": "-        } else if (!indented && parser->options & CMARK_OPT_FOOTNOTES && (matched = scan_footnote_definition(input, parser->first_nonspace))) {\n\n+        } else if (!indented && (parser->options & CMARK_OPT_FOOTNOTES) && depth < MAX_LIST_DEPTH && (matched = scan_footnote_definition(input, parser->first_nonspace))) {\n\n",
    "11": "-        } else if (!indented && (parser->options & CMARK_OPT_FOOTNOTES) && depth < MAX_LIST_DEPTH && (matched = scan_footnote_definition(input, parser->first_nonspace))) {\n\n+        } else if (!indented && parser->options & CMARK_OPT_FOOTNOTES && (matched = scan_footnote_definition(input, parser->first_nonspace))) {\n\n",
    "12": "-    cmark_node *n;\n\n",
    "13": "-        uint8_t *alignments = get_table_alignments(node->parent->parent);\n\n",
    "14": "+    cmark_node *n;\n\n",
    "15": "+        uint8_t *alignments = get_table_alignments(node->parent->parent);\n\n"
}