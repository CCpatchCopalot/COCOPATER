{
    "0": "+    const int nb_samples = FFM(s->overlap, s->in->nb_samples);\n\n",
    "1": "-    memcpy(&left_in[offset], left_samples, s->overlap * sizeof(float));\n-    memcpy(&right_in[offset], right_samples, s->overlap * sizeof(float));\n\n+    memcpy(&left_in[offset], left_samples, nb_samples * sizeof(float));\n+    memcpy(&right_in[offset], right_samples, nb_samples * sizeof(float));\n\n-    const int nb_samples = FFM(s->overlap, s->in->nb_samples);\n\n-    memcpy(&left_in[offset], left_samples, nb_samples * sizeof(float));\n-    memcpy(&right_in[offset], right_samples, nb_samples * sizeof(float));\n\n+    memcpy(&left_in[offset], left_samples, s->overlap * sizeof(float));\n+    memcpy(&right_in[offset], right_samples, s->overlap * sizeof(float));\n\n",
    "2": "-    s->in_frame = ff_get_audio_buffer(inlink, s->fft_size * 4);\n-    s->center_frame = ff_get_audio_buffer(inlink, s->fft_size * 4);\n-    s->out_dist_frame = ff_get_audio_buffer(inlink, s->fft_size * 4);\n-    s->windowed_frame = ff_get_audio_buffer(inlink, s->fft_size * 4);\n-    s->windowed_out = ff_get_audio_buffer(inlink, s->fft_size * 4);\n-    s->windowed_prev = ff_get_audio_buffer(inlink, s->fft_size * 4);\n\n+    s->in_frame = ff_get_audio_buffer(inlink, (s->fft_size + 2) * 2);\n+    s->center_frame = ff_get_audio_buffer(inlink, (s->fft_size + 2) * 2);\n+    s->out_dist_frame = ff_get_audio_buffer(inlink, (s->fft_size + 2) * 2);\n+    s->windowed_frame = ff_get_audio_buffer(inlink, (s->fft_size + 2) * 2);\n+    s->windowed_out = ff_get_audio_buffer(inlink, (s->fft_size + 2) * 2);\n+    s->windowed_prev = ff_get_audio_buffer(inlink, (s->fft_size + 2) * 2);\n\n",
    "3": "-    s->in_frame = ff_get_audio_buffer(inlink, (s->fft_size + 2) * 2);\n-    s->center_frame = ff_get_audio_buffer(inlink, (s->fft_size + 2) * 2);\n-    s->out_dist_frame = ff_get_audio_buffer(inlink, (s->fft_size + 2) * 2);\n-    s->windowed_frame = ff_get_audio_buffer(inlink, (s->fft_size + 2) * 2);\n-    s->windowed_out = ff_get_audio_buffer(inlink, (s->fft_size + 2) * 2);\n-    s->windowed_prev = ff_get_audio_buffer(inlink, (s->fft_size + 2) * 2);\n\n+    s->in_frame = ff_get_audio_buffer(inlink, s->fft_size * 4);\n+    s->center_frame = ff_get_audio_buffer(inlink, s->fft_size * 4);\n+    s->out_dist_frame = ff_get_audio_buffer(inlink, s->fft_size * 4);\n+    s->windowed_frame = ff_get_audio_buffer(inlink, s->fft_size * 4);\n+    s->windowed_out = ff_get_audio_buffer(inlink, s->fft_size * 4);\n+    s->windowed_prev = ff_get_audio_buffer(inlink, s->fft_size * 4);\n\n"
}